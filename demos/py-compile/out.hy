(import math) (import pymunk) (import [pyphysicssandbox [*]]) (import pygame) (import [pyphysicssandbox [Vec2d]]) (setv w 505) (setv h 373) (setv user_shapes []) (setv image_bindings []) (setv pivots []) (setv connected_shapes []) (window "Most Awesome Thing Ever" 505 373) (setv obj47 (static_box [(int (- 505/2 505/2)) (int (- 368 5))] 505 10)) (setv obj47.color (Color "white")) (setv obj47.group 47) (setv obj47_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj47.png")) (image-bindings.append [obj47 obj47_image]) (user_shapes.append obj47) (setv obj49 (static_box [(int (- 500 5)) (int (- 373/2 353/2))] 10 353)) (setv obj49.color (Color "white")) (setv obj49.group 49) (setv obj49_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj49.png")) (image-bindings.append [obj49 obj49_image]) (user_shapes.append obj49) (setv obj45 (cosmetic_ball [(int 505/2) (int 373/2)] 485/2)) (setv obj45.color (Color "white")) (setv obj45.group 45) (setv obj45_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj45.png")) (image-bindings.append [obj45 obj45_image]) (user_shapes.append obj45) (setv obj34 (static_ball [(int 505/2) (int 639/2)] 1)) (setv obj34.color (Color "white")) (setv obj34.group 34) (setv obj34_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj34.png")) (image-bindings.append [obj34 obj34_image]) (user_shapes.append obj34) (setv obj31 (box [(int (- 505/2 201/2)) (int (- 308 11/2))] 201 11)) (setv obj31.color (Color "white")) (setv obj31.group 31) (setv obj31_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj31.png")) (image-bindings.append [obj31 obj31_image]) (user_shapes.append obj31) (setv obj27 (cosmetic_ball [(int 505/2) (int 308)] 21/2)) (setv obj27.color (Color "white")) (setv obj27.group 27) (setv obj27_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj27.png")) (image-bindings.append [obj27 obj27_image]) (user_shapes.append obj27) (setv obj1 (box [(int (- 655/2 30)) (int (- 535/2 30))] 60 60)) (setv obj1.color (Color "white")) (setv obj1.group 1) (setv obj1_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj1.png")) (image-bindings.append [obj1 obj1_image]) (user_shapes.append obj1) (setv obj25 (cosmetic_ball [(int 655/2) (int 425/2)] 25)) (setv obj25.color (Color "white")) (setv obj25.group 25) (setv obj25_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj25.png")) (image-bindings.append [obj25 obj25_image]) (user_shapes.append obj25) (setv obj2 (ball [(int 655/2) (int 335/2)] 20)) (setv obj2.color (Color "white")) (setv obj2.group 2) (setv obj2_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj2.png")) (image-bindings.append [obj2 obj2_image]) (user_shapes.append obj2) (setv obj40 (cosmetic_ball [(int 445/2) (int 445/2)] 75)) (setv obj40.color (Color "white")) (setv obj40.group 40) (setv obj40_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj40.png")) (image-bindings.append [obj40 obj40_image]) (user_shapes.append obj40) (setv obj39 (cosmetic_ball [(int 505/2) (int 245/2)] 25)) (setv obj39.color (Color "white")) (setv obj39.group 39) (setv obj39_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj39.png")) (image-bindings.append [obj39 obj39_image]) (user_shapes.append obj39) (setv obj37 (cosmetic_ball [(int 275) (int 75)] 75)) (setv obj37.color (Color "white")) (setv obj37.group 37) (setv obj37_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj37.png")) (image-bindings.append [obj37 obj37_image]) (user_shapes.append obj37) (setv obj32 (ball [(int 355/2) (int 75)] 45/2)) (setv obj32.color (Color "white")) (setv obj32.group 32) (setv obj32_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj32.png")) (image-bindings.append [obj32 obj32_image]) (user_shapes.append obj32) (setv obj21 (box [(int (- 275 15/2)) (int (- 209 15/2))] 15 15)) (setv obj21.color (Color "white")) (setv obj21.group 21) (setv obj21_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj21.png")) (image-bindings.append [obj21 obj21_image]) (user_shapes.append obj21) (setv obj20 (box [(int (- 275 15/2)) (int (- 194 15/2))] 15 15)) (setv obj20.color (Color "white")) (setv obj20.group 20) (setv obj20_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj20.png")) (image-bindings.append [obj20 obj20_image]) (user_shapes.append obj20) (setv obj19 (box [(int (- 275 15/2)) (int (- 179 15/2))] 15 15)) (setv obj19.color (Color "white")) (setv obj19.group 19) (setv obj19_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj19.png")) (image-bindings.append [obj19 obj19_image]) (user_shapes.append obj19) (setv obj18 (box [(int (- 275 15/2)) (int (- 164 15/2))] 15 15)) (setv obj18.color (Color "white")) (setv obj18.group 18) (setv obj18_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj18.png")) (image-bindings.append [obj18 obj18_image]) (user_shapes.append obj18) (setv obj16 (box [(int (- 260 15/2)) (int (- 209 15/2))] 15 15)) (setv obj16.color (Color "white")) (setv obj16.group 16) (setv obj16_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj16.png")) (image-bindings.append [obj16 obj16_image]) (user_shapes.append obj16) (setv obj15 (box [(int (- 260 15/2)) (int (- 194 15/2))] 15 15)) (setv obj15.color (Color "white")) (setv obj15.group 15) (setv obj15_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj15.png")) (image-bindings.append [obj15 obj15_image]) (user_shapes.append obj15) (setv obj14 (box [(int (- 260 15/2)) (int (- 179 15/2))] 15 15)) (setv obj14.color (Color "white")) (setv obj14.group 14) (setv obj14_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj14.png")) (image-bindings.append [obj14 obj14_image]) (user_shapes.append obj14) (setv obj13 (box [(int (- 260 15/2)) (int (- 164 15/2))] 15 15)) (setv obj13.color (Color "white")) (setv obj13.group 13) (setv obj13_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj13.png")) (image-bindings.append [obj13 obj13_image]) (user_shapes.append obj13) (setv obj11 (box [(int (- 245 15/2)) (int (- 209 15/2))] 15 15)) (setv obj11.color (Color "white")) (setv obj11.group 11) (setv obj11_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj11.png")) (image-bindings.append [obj11 obj11_image]) (user_shapes.append obj11) (setv obj10 (box [(int (- 245 15/2)) (int (- 194 15/2))] 15 15)) (setv obj10.color (Color "white")) (setv obj10.group 10) (setv obj10_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj10.png")) (image-bindings.append [obj10 obj10_image]) (user_shapes.append obj10) (setv obj9 (box [(int (- 245 15/2)) (int (- 179 15/2))] 15 15)) (setv obj9.color (Color "white")) (setv obj9.group 9) (setv obj9_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj9.png")) (image-bindings.append [obj9 obj9_image]) (user_shapes.append obj9) (setv obj8 (box [(int (- 245 15/2)) (int (- 164 15/2))] 15 15)) (setv obj8.color (Color "white")) (setv obj8.group 8) (setv obj8_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj8.png")) (image-bindings.append [obj8 obj8_image]) (user_shapes.append obj8) (setv obj6 (box [(int (- 230 15/2)) (int (- 209 15/2))] 15 15)) (setv obj6.color (Color "white")) (setv obj6.group 6) (setv obj6_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj6.png")) (image-bindings.append [obj6 obj6_image]) (user_shapes.append obj6) (setv obj5 (box [(int (- 230 15/2)) (int (- 194 15/2))] 15 15)) (setv obj5.color (Color "white")) (setv obj5.group 5) (setv obj5_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj5.png")) (image-bindings.append [obj5 obj5_image]) (user_shapes.append obj5) (setv obj4 (box [(int (- 230 15/2)) (int (- 179 15/2))] 15 15)) (setv obj4.color (Color "white")) (setv obj4.group 4) (setv obj4_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj4.png")) (image-bindings.append [obj4 obj4_image]) (user_shapes.append obj4) (setv obj3 (box [(int (- 230 15/2)) (int (- 164 15/2))] 15 15)) (setv obj3.color (Color "white")) (setv obj3.group 3) (setv obj3_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj3.png")) (image-bindings.append [obj3 obj3_image]) (user_shapes.append obj3) (setv obj49 (static_box [(int (- 5 5)) (int (- 373/2 353/2))] 10 353)) (setv obj49.color (Color "white")) (setv obj49.group 49) (setv obj49_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj49.png")) (image-bindings.append [obj49 obj49_image]) (user_shapes.append obj49) (setv obj47 (static_box [(int (- 505/2 505/2)) (int (- 5 5))] 505 10)) (setv obj47.color (Color "white")) (setv obj47.group 47) (setv obj47_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj47.png")) (image-bindings.append [obj47 obj47_image]) (user_shapes.append obj47) (do (rotary_spring obj34 obj31 0 100000000 0)) (do (setv (. obj31 mass) 10)) (do (setv pivot27 (pivot (, 505/2 308))) (pivots.append pivot27)) (do (pivot27.connect obj31)) (do (setv (. obj1 mass) 10)) (do (defn on_collide_1_2 [s f p] (do (do (do (do (try (do (setv obj3.body.position (, (+ (. p [0]) (. obj3.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj3.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj3)) (except [e] (print e)))) (do (try (do (setv obj4.body.position (, (+ (. p [0]) (. obj4.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj4.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj4)) (except [e] (print e)))) (do (try (do (setv obj5.body.position (, (+ (. p [0]) (. obj5.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj5.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj5)) (except [e] (print e)))) (do (try (do (setv obj6.body.position (, (+ (. p [0]) (. obj6.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj6.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj6)) (except [e] (print e))))) (do (do (try (do (setv obj8.body.position (, (+ (. p [0]) (. obj8.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj8.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj8)) (except [e] (print e)))) (do (try (do (setv obj9.body.position (, (+ (. p [0]) (. obj9.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj9.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj9)) (except [e] (print e)))) (do (try (do (setv obj10.body.position (, (+ (. p [0]) (. obj10.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj10.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj10)) (except [e] (print e)))) (do (try (do (setv obj11.body.position (, (+ (. p [0]) (. obj11.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj11.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj11)) (except [e] (print e))))) (do (do (try (do (setv obj13.body.position (, (+ (. p [0]) (. obj13.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj13.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj13)) (except [e] (print e)))) (do (try (do (setv obj14.body.position (, (+ (. p [0]) (. obj14.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj14.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj14)) (except [e] (print e)))) (do (try (do (setv obj15.body.position (, (+ (. p [0]) (. obj15.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj15.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj15)) (except [e] (print e)))) (do (try (do (setv obj16.body.position (, (+ (. p [0]) (. obj16.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj16.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj16)) (except [e] (print e))))) (do (do (try (do (setv obj18.body.position (, (+ (. p [0]) (. obj18.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj18.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj18)) (except [e] (print e)))) (do (try (do (setv obj19.body.position (, (+ (. p [0]) (. obj19.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj19.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj19)) (except [e] (print e)))) (do (try (do (setv obj20.body.position (, (+ (. p [0]) (. obj20.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj20.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj20)) (except [e] (print e)))) (do (try (do (setv obj21.body.position (, (+ (. p [0]) (. obj21.body.position [0]) (* -1 (/ w 2))) (+ (. p [1]) (. obj21.body.position [1]) (* -1 (/ h 2))))) (deactivate f) (reactivate obj21)) (except [e] (print e)))))))) (if (in "obj1" (vars)) (add-collision obj2 obj1 on_collide_1_2))) (do (setv (. obj2 mass) 10)) (do (setv obj2.gravity (, 0 0))) (do (setv (. obj32 mass) 10000)) (do (obj32.hit [0 1500000] obj32.position)) (do (setv (. obj21 mass) 10)) (do (if (in "obj21" (vars)) (deactivate obj21))) (do (setv (. obj20 mass) 10)) (do (if (in "obj20" (vars)) (deactivate obj20))) (do (setv (. obj19 mass) 10)) (do (if (in "obj19" (vars)) (deactivate obj19))) (do (setv (. obj18 mass) 10)) (do (if (in "obj18" (vars)) (deactivate obj18))) (do (setv (. obj16 mass) 10)) (do (if (in "obj16" (vars)) (deactivate obj16))) (do (setv (. obj15 mass) 10)) (do (if (in "obj15" (vars)) (deactivate obj15))) (do (setv (. obj14 mass) 10)) (do (if (in "obj14" (vars)) (deactivate obj14))) (do (setv (. obj13 mass) 10)) (do (if (in "obj13" (vars)) (deactivate obj13))) (do (setv (. obj11 mass) 10)) (do (if (in "obj11" (vars)) (deactivate obj11))) (do (setv (. obj10 mass) 10)) (do (if (in "obj10" (vars)) (deactivate obj10))) (do (setv (. obj9 mass) 10)) (do (if (in "obj9" (vars)) (deactivate obj9))) (do (setv (. obj8 mass) 10)) (do (if (in "obj8" (vars)) (deactivate obj8))) (do (setv (. obj6 mass) 10)) (do (if (in "obj6" (vars)) (deactivate obj6))) (do (setv (. obj5 mass) 10)) (do (if (in "obj5" (vars)) (deactivate obj5))) (do (setv (. obj4 mass) 10)) (do (if (in "obj4" (vars)) (deactivate obj4))) (do (setv (. obj3 mass) 10)) (do (if (in "obj3" (vars)) (deactivate obj3))) (defn image-for [s] (do (global image-bindings) (for (b image-bindings) (if (= (. b [0]) s) (return (. b [1])))) (return False))) (defn draw-images [cosmetic] (do (defn f [keys] (do (global user-shapes) (for (s user-shapes) (if (not (image-for s)) (continue)) (if (not (= cosmetic (. s _cosmetic))) (continue)) (if (not (. s active)) (continue)) (if (. s body) (setv p (Vec2d (. s body position x) (. s body position y))) (setv p (Vec2d (. s _x) (. s _y)))) (setv angle 0) (if (. s body) (setv angle (. s body angle))) (setv angle_degrees (math.degrees angle)) (setv rotated_logo_img (pygame.transform.rotate (image-for s) (* -1 angle-degrees))) (setv offset (/ (Vec2d (rotated_logo_img.get_size)) 2)) (setv p (- p offset)) (setv screen (pygame.display.get-surface)) (screen.blit rotated_logo_img p)))) (return f))) (defn draw_pivot_lines [keys] (do (global pivots) (for (p pivots) (setv start (. p body position)) (for (j (. p shape)) (setv other (. j a)) (setv end (. other position)) (setv screen (pygame.display.get_surface)) (pygame.draw.line screen (Color "black") start end))))) (defn draw_connection_lines [keys] (do (global pivots) (for (c connected_shapes) (setv start (. c [0] body position)) (setv end (. c [1] body position)) (if (or (not (. c [0] active)) (not (. c [0] active))) (continue)) (setv screen (pygame.display.get_surface)) (pygame.draw.line screen (Color "black") start end)))) (add-observer (draw-images True)) (add-observer draw_pivot_lines) (add-observer draw_connection_lines) (add-observer (draw-images False)) (run)