(import sys) (import math) (import pymunk) (import [pyphysicssandbox [*]]) (import pygame) (import [pyphysicssandbox [Vec2d]]) (setv w 505) (setv h 385) (setv user_shapes []) (setv image_bindings []) (setv pivots []) (setv connected_shapes []) (window "Most Awesome Thing Ever" 505 385) (defn make_obj140 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj140" "\n" "#(struct:physical 140 505/2 380 () #<box-collider> #(struct:object:image% ...) #f)"))) (do (setv obj140 (static_box [(+ (int (- 505/2 505/2)) (int off-x)) (+ (int (- 380 5)) (int off-y))] 505 10)) (setv obj140.color (Color "white")) (setv obj140.group 140) (setv obj140_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj140.png")) (image-bindings.append [obj140 obj140_image]) (user_shapes.append obj140) obj140))) (setv obj140 (make_obj140 0 0 False)) (defn make_obj142 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj142" "\n" "#(struct:physical 142 500 365/2 () #<box-collider> #(struct:object:image% ...) #f)"))) (do (setv obj142 (static_box [(+ (int (- 500 5)) (int off-x)) (+ (int (- 385/2 365/2)) (int off-y))] 10 365)) (setv obj142.color (Color "white")) (setv obj142.group 142) (setv obj142_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj142.png")) (image-bindings.append [obj142 obj142_image]) (user_shapes.append obj142) obj142))) (setv obj142 (make_obj142 0 0 False)) (defn make_obj138 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj138" "\n" "#(struct:cosmetic 138 485/2 365/2 () #(struct:object:image% ...))"))) (do (setv obj138 (cosmetic_ball [(+ (int 505/2) (int off-x)) (+ (int 385/2)) (int off-y)] 485/2)) (setv obj138.color (Color "white")) (setv obj138.group 138) (setv obj138_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj138.png")) (image-bindings.append [obj138 obj138_image]) (user_shapes.append obj138) obj138))) (setv obj138 (make_obj138 0 0 False)) (defn make_obj134 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj134" "\n" "#(struct:cosmetic 134 312 55 () #(struct:object:image% ...))"))) (do (setv obj134 (cosmetic_ball [(+ (int 717/2) (int off-x)) (+ (int 320)) (int off-y)] 100)) (setv obj134.color (Color "white")) (setv obj134.group 134) (setv obj134_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj134.png")) (image-bindings.append [obj134 obj134_image]) (user_shapes.append obj134) obj134))) (setv obj134 (make_obj134 0 0 False)) (defn make_obj129 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj129" "\n" "#(struct:physical 129 164 55 (#<procedure:...ery/compiler.rkt:533:21>) #<box-collider> #(struct:object:image% ...) #f)"))) (do (setv obj129 (static_box [(+ (int (- 421/2 48)) (int off-x)) (+ (int (- 320 53)) (int off-y))] 96 106)) (setv obj129.color (Color "white")) (setv obj129.group 129) (setv obj129_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj129.png")) (image-bindings.append [obj129 obj129_image]) (user_shapes.append obj129) obj129))) (setv obj129 (make_obj129 0 0 False)) (defn make_obj127 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj127" "\n" "#(struct:cosmetic 127 106 55 () #(struct:object:image% ...))"))) (do (setv obj127 (cosmetic_ball [(+ (int 305/2) (int off-x)) (+ (int 320)) (int off-y)] 10)) (setv obj127.color (Color "white")) (setv obj127.group 127) (setv obj127_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj127.png")) (image-bindings.append [obj127 obj127_image]) (user_shapes.append obj127) obj127))) (setv obj127 (make_obj127 0 0 False)) (defn make_obj122 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj122" "\n" "#(struct:physical 122 48 55 (#<procedure:...ery/compiler.rkt:533:21>) #<box-collider> #(struct:object:image% ...) #f)"))) (do (setv obj122 (static_box [(+ (int (- 189/2 48)) (int off-x)) (+ (int (- 320 55)) (int off-y))] 96 110)) (setv obj122.color (Color "white")) (setv obj122.group 122) (setv obj122_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj122.png")) (image-bindings.append [obj122 obj122_image]) (user_shapes.append obj122) obj122))) (setv obj122 (make_obj122 0 0 False)) (defn make_obj120 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj120" "\n" "#(struct:cosmetic 120 206 230 () #(struct:object:image% ...))"))) (do (setv obj120 (cosmetic_ball [(+ (int 505/2) (int off-x)) (+ (int 240)) (int off-y)] 25)) (setv obj120.color (Color "white")) (setv obj120.group 120) (setv obj120_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj120.png")) (image-bindings.append [obj120 obj120_image]) (user_shapes.append obj120) obj120))) (setv obj120 (make_obj120 0 0 False)) (defn make_obj1 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj1" "\n" "#(struct:physical 1 110 365/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:395:21> #<procedure:...ery/compiler.rkt:395:21> #<procedure:...ery/compiler.rkt:395:21> #<procedure:...ery/compiler.rkt:395:21> #<procedure:...ery/compiler.rkt:395:21>) #<circle-collider> #(struct:object:image% ...) #t)"))) (do (setv obj1 (ball [(+ (int 505/2) (int off-x)) (+ (int 385/2)) (int off-y)] 45/2)) (setv obj1.color (Color "white")) (setv obj1.group 1) (setv obj1_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj1.png")) (image-bindings.append [obj1 obj1_image]) (user_shapes.append obj1) obj1))) (setv obj1 (make_obj1 0 0 False)) (defn make_obj118 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj118" "\n" "#(struct:cosmetic 118 110 110 () #(struct:object:image% ...))"))) (do (setv obj118 (cosmetic_ball [(+ (int 505/2) (int off-x)) (+ (int 120)) (int off-y)] 50)) (setv obj118.color (Color "white")) (setv obj118.group 118) (setv obj118_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj118.png")) (image-bindings.append [obj118 obj118_image]) (user_shapes.append obj118) obj118))) (setv obj118 (make_obj118 0 0 False)) (defn make_obj94 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj94" "\n" "#(struct:physical 94 198 30 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:387:21> #<procedure:...ery/compiler.rkt:423:21> #<procedure:...ery/compiler.rkt:533:21> #<procedure:...ery/compiler.rkt:493:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj94 (box [(+ (int (- 681/2 22)) (int off-x)) (+ (int (- 40 30)) (int off-y))] 44 60)) (setv obj94.color (Color "white")) (setv obj94.group 94) (setv obj94_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj94.png")) (image-bindings.append [obj94 obj94_image]) (user_shapes.append obj94) obj94))) (setv obj94 (make_obj94 0 0 False)) (defn make_obj71 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj71" "\n" "#(struct:physical 71 154 30 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:387:21> #<procedure:...ery/compiler.rkt:423:21> #<procedure:...ery/compiler.rkt:533:21> #<procedure:...ery/compiler.rkt:493:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj71 (box [(+ (int (- 593/2 22)) (int off-x)) (+ (int (- 40 30)) (int off-y))] 44 60)) (setv obj71.color (Color "white")) (setv obj71.group 71) (setv obj71_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj71.png")) (image-bindings.append [obj71 obj71_image]) (user_shapes.append obj71) obj71))) (setv obj71 (make_obj71 0 0 False)) (defn make_obj48 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj48" "\n" "#(struct:physical 48 110 30 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:387:21> #<procedure:...ery/compiler.rkt:423:21> #<procedure:...ery/compiler.rkt:533:21> #<procedure:...ery/compiler.rkt:493:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj48 (box [(+ (int (- 505/2 22)) (int off-x)) (+ (int (- 40 30)) (int off-y))] 44 60)) (setv obj48.color (Color "white")) (setv obj48.group 48) (setv obj48_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj48.png")) (image-bindings.append [obj48 obj48_image]) (user_shapes.append obj48) obj48))) (setv obj48 (make_obj48 0 0 False)) (defn make_obj25 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj25" "\n" "#(struct:physical 25 66 30 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:387:21> #<procedure:...ery/compiler.rkt:423:21> #<procedure:...ery/compiler.rkt:533:21> #<procedure:...ery/compiler.rkt:493:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj25 (box [(+ (int (- 417/2 22)) (int off-x)) (+ (int (- 40 30)) (int off-y))] 44 60)) (setv obj25.color (Color "white")) (setv obj25.group 25) (setv obj25_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj25.png")) (image-bindings.append [obj25 obj25_image]) (user_shapes.append obj25) obj25))) (setv obj25 (make_obj25 0 0 False)) (defn make_obj2 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj2" "\n" "#(struct:physical 2 22 30 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:387:21> #<procedure:...ery/compiler.rkt:423:21> #<procedure:...ery/compiler.rkt:533:21> #<procedure:...ery/compiler.rkt:493:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj2 (box [(+ (int (- 329/2 22)) (int off-x)) (+ (int (- 40 30)) (int off-y))] 44 60)) (setv obj2.color (Color "white")) (setv obj2.group 2) (setv obj2_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj2.png")) (image-bindings.append [obj2 obj2_image]) (user_shapes.append obj2) obj2))) (setv obj2 (make_obj2 0 0 False)) (defn make_obj142 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj142" "\n" "#(struct:physical 142 5 365/2 () #<box-collider> #(struct:object:image% ...) #f)"))) (do (setv obj142 (static_box [(+ (int (- 5 5)) (int off-x)) (+ (int (- 385/2 365/2)) (int off-y))] 10 365)) (setv obj142.color (Color "white")) (setv obj142.group 142) (setv obj142_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj142.png")) (image-bindings.append [obj142 obj142_image]) (user_shapes.append obj142) obj142))) (setv obj142 (make_obj142 0 0 False)) (defn make_obj140 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj140" "\n" "#(struct:physical 140 505/2 5 () #<box-collider> #(struct:object:image% ...) #f)"))) (do (setv obj140 (static_box [(+ (int (- 505/2 505/2)) (int off-x)) (+ (int (- 5 5)) (int off-y))] 505 10)) (setv obj140.color (Color "white")) (setv obj140.group 140) (setv obj140_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj140.png")) (image-bindings.append [obj140 obj140_image]) (user_shapes.append obj140) obj140))) (setv obj140 (make_obj140 0 0 False)) (do (defn on_click_129 [keys] (do (global obj129) (setv f obj129) (if (or (not f) (not f.body)) (return False)) (setv p f.body.position) (if (and (mouse-clicked) (obj129.inside (mouse-point)) (. obj129 active)) (do (do (defn make_obj130 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj130" "\n" "#(struct:cosmetic 130 48 45/2 () #(struct:object:image% ...))"))) (do (setv obj130 (cosmetic_ball [(+ (int (+ p.x 48 -141/2)) (int off-x)) (+ (int (+ p.y 45/2 -145/2))) (int off-y)] 48)) (setv obj130.color (Color "white")) (setv obj130.group 130) (setv obj130_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj130.png")) (image-bindings.append [obj130 obj130_image]) (user_shapes.append obj130) obj130))) (setv obj130 (make_obj130 0 0 False)) (defn make_obj128 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj128" "\n" "#(struct:physical 128 237/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<circle-collider> #(struct:object:image% ...) #t)"))) (do (setv obj128 (ball [(+ (int (+ p.x 237/2 -141/2)) (int off-x)) (+ (int (+ p.y 45/2 -145/2))) (int off-y)] 45/2)) (setv obj128.color (Color "white")) (setv obj128.group 128) (setv obj128_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj128.png")) (image-bindings.append [obj128 obj128_image]) (user_shapes.append obj128) obj128))) (setv obj128 (make_obj128 0 0 False)) (setv (. obj128 mass) 10000) (obj128.hit [1000000 -1000000] obj128.position) (defn make_obj132 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj132" "\n" "#(struct:cosmetic 132 141/2 95 () #(struct:object:image% ...))"))) (do (setv obj132 (cosmetic_ball [(+ (int (+ p.x 141/2 -141/2)) (int off-x)) (+ (int (+ p.y 95 -145/2))) (int off-y)] 50)) (setv obj132.color (Color "white")) (setv obj132.group 132) (setv obj132_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj132.png")) (image-bindings.append [obj132 obj132_image]) (user_shapes.append obj132) obj132))) (setv obj132 (make_obj132 0 0 False))) (return True))))) (add-observer on_click_129)) (do (defn on_click_122 [keys] (do (global obj122) (setv f obj122) (if (or (not f) (not f.body)) (return False)) (setv p f.body.position) (if (and (mouse-clicked) (obj122.inside (mouse-point)) (. obj122 active)) (do (do (defn make_obj123 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj123" "\n" "#(struct:cosmetic 123 48 30 () #(struct:object:image% ...))"))) (do (setv obj123 (cosmetic_ball [(+ (int (+ p.x 48 -70)) (int off-x)) (+ (int (+ p.y 30 -80))) (int off-y)] 48)) (setv obj123.color (Color "white")) (setv obj123.group 123) (setv obj123_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj123.png")) (image-bindings.append [obj123 obj123_image]) (user_shapes.append obj123) obj123))) (setv obj123 (make_obj123 0 0 False)) (defn make_obj121 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj121" "\n" "#(struct:physical 121 118 30 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:387:21> #<procedure:...ery/compiler.rkt:423:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj121 (box [(+ (int (- (+ p.x 118 -70) 22)) (int off-x)) (+ (int (- (+ p.y 30 -80) 30)) (int off-y))] 44 60)) (setv obj121.color (Color "white")) (setv obj121.group 121) (setv obj121_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj121.png")) (image-bindings.append [obj121 obj121_image]) (user_shapes.append obj121) obj121))) (setv obj121 (make_obj121 0 0 False)) (setv (. obj121 mass) 10) motor obj121 0 (setv obj121.gravity (, 0 -100)) (obj121.hit [1000000 -1000000] obj121.position) (defn make_obj125 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj125" "\n" "#(struct:cosmetic 125 70 110 () #(struct:object:image% ...))"))) (do (setv obj125 (cosmetic_ball [(+ (int (+ p.x 70 -70)) (int off-x)) (+ (int (+ p.y 110 -80))) (int off-y)] 50)) (setv obj125.color (Color "white")) (setv obj125.group 125) (setv obj125_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj125.png")) (image-bindings.append [obj125 obj125_image]) (user_shapes.append obj125) obj125))) (setv obj125 (make_obj125 0 0 False))) (return True))))) (add-observer on_click_122)) (do (setv (. obj1 mass) 10000)) (do (setv p (spring (. obj1 body position) obj1 (. obj2 body position) obj2 100 20000 1000)) (connected-shapes.append [obj1 obj2 p])) (do (setv p (spring (. obj1 body position) obj1 (. obj25 body position) obj25 100 20000 1000)) (connected-shapes.append [obj1 obj25 p])) (do (setv p (spring (. obj1 body position) obj1 (. obj48 body position) obj48 100 20000 1000)) (connected-shapes.append [obj1 obj48 p])) (do (setv p (spring (. obj1 body position) obj1 (. obj71 body position) obj71 100 20000 1000)) (connected-shapes.append [obj1 obj71 p])) (do (setv p (spring (. obj1 body position) obj1 (. obj94 body position) obj94 100 20000 1000)) (connected-shapes.append [obj1 obj94 p])) (do (setv (. obj94 mass) 10)) (motor obj94 0) (do (setv obj94.gravity (, 0 -100))) (do (defn on_click_94 [keys] (do (global obj94) (setv f obj94) (if (or (not f) (not f.body)) (return False)) (setv p f.body.position) (if (and (mouse-clicked) (obj94.inside (mouse-point)) (. obj94 active)) (do (do (defn make_obj96 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj96" "\n" "#(struct:physical 96 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj96 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj96.color (Color "white")) (setv obj96.group 96) (setv obj96_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj96.png")) (image-bindings.append [obj96 obj96_image]) (user_shapes.append obj96) obj96))) (setv obj96 (make_obj96 0 0 False)) (setv (. obj96 mass) 10) (obj96.hit [36492.24305767253 -10423.823089374971] obj96.position) (defn make_obj97 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj97" "\n" "#(struct:physical 97 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj97 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj97.color (Color "white")) (setv obj97.group 97) (setv obj97_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj97.png")) (image-bindings.append [obj97 obj97_image]) (user_shapes.append obj97) obj97))) (setv obj97 (make_obj97 0 0 False)) (setv (. obj97 mass) 10) (obj97.hit [27731.80756909214 -10461.787594494366] obj97.position) (defn make_obj98 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj98" "\n" "#(struct:physical 98 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj98 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj98.color (Color "white")) (setv obj98.group 98) (setv obj98_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj98.png")) (image-bindings.append [obj98 obj98_image]) (user_shapes.append obj98) obj98))) (setv obj98 (make_obj98 0 0 False)) (setv (. obj98 mass) 10) (obj98.hit [-21311.793903087528 2354.0389234293543] obj98.position) (defn make_obj99 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj99" "\n" "#(struct:physical 99 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj99 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj99.color (Color "white")) (setv obj99.group 99) (setv obj99_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj99.png")) (image-bindings.append [obj99 obj99_image]) (user_shapes.append obj99) obj99))) (setv obj99 (make_obj99 0 0 False)) (setv (. obj99 mass) 10) (obj99.hit [8849.007575910917 48827.088334605665] obj99.position) (defn make_obj101 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj101" "\n" "#(struct:physical 101 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj101 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj101.color (Color "white")) (setv obj101.group 101) (setv obj101_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj101.png")) (image-bindings.append [obj101 obj101_image]) (user_shapes.append obj101) obj101))) (setv obj101 (make_obj101 0 0 False)) (setv (. obj101 mass) 10) (obj101.hit [35197.26817520145 -49307.96261319337] obj101.position) (defn make_obj102 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj102" "\n" "#(struct:physical 102 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj102 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj102.color (Color "white")) (setv obj102.group 102) (setv obj102_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj102.png")) (image-bindings.append [obj102 obj102_image]) (user_shapes.append obj102) obj102))) (setv obj102 (make_obj102 0 0 False)) (setv (. obj102 mass) 10) (obj102.hit [-6916.924621611906 -24196.83307710599] obj102.position) (defn make_obj103 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj103" "\n" "#(struct:physical 103 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj103 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj103.color (Color "white")) (setv obj103.group 103) (setv obj103_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj103.png")) (image-bindings.append [obj103 obj103_image]) (user_shapes.append obj103) obj103))) (setv obj103 (make_obj103 0 0 False)) (setv (. obj103 mass) 10) (obj103.hit [-31744.42248485048 33544.33287801716] obj103.position) (defn make_obj104 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj104" "\n" "#(struct:physical 104 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj104 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj104.color (Color "white")) (setv obj104.group 104) (setv obj104_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj104.png")) (image-bindings.append [obj104 obj104_image]) (user_shapes.append obj104) obj104))) (setv obj104 (make_obj104 0 0 False)) (setv (. obj104 mass) 10) (obj104.hit [-17393.734356830064 28265.587957399504] obj104.position) (defn make_obj106 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj106" "\n" "#(struct:physical 106 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj106 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj106.color (Color "white")) (setv obj106.group 106) (setv obj106_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj106.png")) (image-bindings.append [obj106 obj106_image]) (user_shapes.append obj106) obj106))) (setv obj106 (make_obj106 0 0 False)) (setv (. obj106 mass) 10) (obj106.hit [-16026.131327598196 -38945.84882090254] obj106.position) (defn make_obj107 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj107" "\n" "#(struct:physical 107 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj107 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj107.color (Color "white")) (setv obj107.group 107) (setv obj107_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj107.png")) (image-bindings.append [obj107 obj107_image]) (user_shapes.append obj107) obj107))) (setv obj107 (make_obj107 0 0 False)) (setv (. obj107 mass) 10) (obj107.hit [11231.602992902845 -12431.705786333136] obj107.position) (defn make_obj108 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj108" "\n" "#(struct:physical 108 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj108 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj108.color (Color "white")) (setv obj108.group 108) (setv obj108_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj108.png")) (image-bindings.append [obj108 obj108_image]) (user_shapes.append obj108) obj108))) (setv obj108 (make_obj108 0 0 False)) (setv (. obj108 mass) 10) (obj108.hit [-13885.768430363343 11142.545686487458] obj108.position) (defn make_obj109 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj109" "\n" "#(struct:physical 109 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj109 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj109.color (Color "white")) (setv obj109.group 109) (setv obj109_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj109.png")) (image-bindings.append [obj109 obj109_image]) (user_shapes.append obj109) obj109))) (setv obj109 (make_obj109 0 0 False)) (setv (. obj109 mass) 10) (obj109.hit [13959.594490843752 -1529.6449228576676] obj109.position) (defn make_obj111 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj111" "\n" "#(struct:physical 111 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj111 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj111.color (Color "white")) (setv obj111.group 111) (setv obj111_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj111.png")) (image-bindings.append [obj111 obj111_image]) (user_shapes.append obj111) obj111))) (setv obj111 (make_obj111 0 0 False)) (setv (. obj111 mass) 10) (obj111.hit [20895.42735979169 32834.532933678216] obj111.position) (defn make_obj112 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj112" "\n" "#(struct:physical 112 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj112 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj112.color (Color "white")) (setv obj112.group 112) (setv obj112_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj112.png")) (image-bindings.append [obj112 obj112_image]) (user_shapes.append obj112) obj112))) (setv obj112 (make_obj112 0 0 False)) (setv (. obj112 mass) 10) (obj112.hit [5650.352145375982 16966.077156584724] obj112.position) (defn make_obj113 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj113" "\n" "#(struct:physical 113 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj113 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj113.color (Color "white")) (setv obj113.group 113) (setv obj113_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj113.png")) (image-bindings.append [obj113 obj113_image]) (user_shapes.append obj113) obj113))) (setv obj113 (make_obj113 0 0 False)) (setv (. obj113 mass) 10) (obj113.hit [10450.180986346139 46635.88162517719] obj113.position) (defn make_obj114 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj114" "\n" "#(struct:physical 114 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj114 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj114.color (Color "white")) (setv obj114.group 114) (setv obj114_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj114.png")) (image-bindings.append [obj114 obj114_image]) (user_shapes.append obj114) obj114))) (setv obj114 (make_obj114 0 0 False)) (setv (. obj114 mass) 10) (obj114.hit [-29327.500914251475 -18978.244729217815] obj114.position) (deactivate f)) (return True))))) (add-observer on_click_94)) (do (defn on_collide_94 [arbiter space data] (do (setv f obj94) (setv p f.body.position) (setv friction (. arbiter friction)) (setv restitution (. arbiter restitution)) (setv total_impulse (. arbiter total_impulse)) (setv energy_loss (. arbiter total_ke)) (if (and (> friction 0) (> energy-loss 50000000)) (do (defn make_obj96 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj96" "\n" "#(struct:physical 96 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj96 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj96.color (Color "white")) (setv obj96.group 96) (setv obj96_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj96.png")) (image-bindings.append [obj96 obj96_image]) (user_shapes.append obj96) obj96))) (setv obj96 (make_obj96 0 0 False)) (setv (. obj96 mass) 10) (obj96.hit [36492.24305767253 -10423.823089374971] obj96.position) (defn make_obj97 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj97" "\n" "#(struct:physical 97 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj97 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj97.color (Color "white")) (setv obj97.group 97) (setv obj97_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj97.png")) (image-bindings.append [obj97 obj97_image]) (user_shapes.append obj97) obj97))) (setv obj97 (make_obj97 0 0 False)) (setv (. obj97 mass) 10) (obj97.hit [27731.80756909214 -10461.787594494366] obj97.position) (defn make_obj98 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj98" "\n" "#(struct:physical 98 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj98 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj98.color (Color "white")) (setv obj98.group 98) (setv obj98_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj98.png")) (image-bindings.append [obj98 obj98_image]) (user_shapes.append obj98) obj98))) (setv obj98 (make_obj98 0 0 False)) (setv (. obj98 mass) 10) (obj98.hit [-21311.793903087528 2354.0389234293543] obj98.position) (defn make_obj99 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj99" "\n" "#(struct:physical 99 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj99 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj99.color (Color "white")) (setv obj99.group 99) (setv obj99_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj99.png")) (image-bindings.append [obj99 obj99_image]) (user_shapes.append obj99) obj99))) (setv obj99 (make_obj99 0 0 False)) (setv (. obj99 mass) 10) (obj99.hit [8849.007575910917 48827.088334605665] obj99.position) (defn make_obj101 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj101" "\n" "#(struct:physical 101 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj101 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj101.color (Color "white")) (setv obj101.group 101) (setv obj101_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj101.png")) (image-bindings.append [obj101 obj101_image]) (user_shapes.append obj101) obj101))) (setv obj101 (make_obj101 0 0 False)) (setv (. obj101 mass) 10) (obj101.hit [35197.26817520145 -49307.96261319337] obj101.position) (defn make_obj102 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj102" "\n" "#(struct:physical 102 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj102 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj102.color (Color "white")) (setv obj102.group 102) (setv obj102_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj102.png")) (image-bindings.append [obj102 obj102_image]) (user_shapes.append obj102) obj102))) (setv obj102 (make_obj102 0 0 False)) (setv (. obj102 mass) 10) (obj102.hit [-6916.924621611906 -24196.83307710599] obj102.position) (defn make_obj103 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj103" "\n" "#(struct:physical 103 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj103 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj103.color (Color "white")) (setv obj103.group 103) (setv obj103_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj103.png")) (image-bindings.append [obj103 obj103_image]) (user_shapes.append obj103) obj103))) (setv obj103 (make_obj103 0 0 False)) (setv (. obj103 mass) 10) (obj103.hit [-31744.42248485048 33544.33287801716] obj103.position) (defn make_obj104 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj104" "\n" "#(struct:physical 104 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj104 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj104.color (Color "white")) (setv obj104.group 104) (setv obj104_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj104.png")) (image-bindings.append [obj104 obj104_image]) (user_shapes.append obj104) obj104))) (setv obj104 (make_obj104 0 0 False)) (setv (. obj104 mass) 10) (obj104.hit [-17393.734356830064 28265.587957399504] obj104.position) (defn make_obj106 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj106" "\n" "#(struct:physical 106 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj106 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj106.color (Color "white")) (setv obj106.group 106) (setv obj106_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj106.png")) (image-bindings.append [obj106 obj106_image]) (user_shapes.append obj106) obj106))) (setv obj106 (make_obj106 0 0 False)) (setv (. obj106 mass) 10) (obj106.hit [-16026.131327598196 -38945.84882090254] obj106.position) (defn make_obj107 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj107" "\n" "#(struct:physical 107 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj107 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj107.color (Color "white")) (setv obj107.group 107) (setv obj107_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj107.png")) (image-bindings.append [obj107 obj107_image]) (user_shapes.append obj107) obj107))) (setv obj107 (make_obj107 0 0 False)) (setv (. obj107 mass) 10) (obj107.hit [11231.602992902845 -12431.705786333136] obj107.position) (defn make_obj108 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj108" "\n" "#(struct:physical 108 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj108 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj108.color (Color "white")) (setv obj108.group 108) (setv obj108_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj108.png")) (image-bindings.append [obj108 obj108_image]) (user_shapes.append obj108) obj108))) (setv obj108 (make_obj108 0 0 False)) (setv (. obj108 mass) 10) (obj108.hit [-13885.768430363343 11142.545686487458] obj108.position) (defn make_obj109 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj109" "\n" "#(struct:physical 109 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj109 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj109.color (Color "white")) (setv obj109.group 109) (setv obj109_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj109.png")) (image-bindings.append [obj109 obj109_image]) (user_shapes.append obj109) obj109))) (setv obj109 (make_obj109 0 0 False)) (setv (. obj109 mass) 10) (obj109.hit [13959.594490843752 -1529.6449228576676] obj109.position) (defn make_obj111 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj111" "\n" "#(struct:physical 111 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj111 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj111.color (Color "white")) (setv obj111.group 111) (setv obj111_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj111.png")) (image-bindings.append [obj111 obj111_image]) (user_shapes.append obj111) obj111))) (setv obj111 (make_obj111 0 0 False)) (setv (. obj111 mass) 10) (obj111.hit [20895.42735979169 32834.532933678216] obj111.position) (defn make_obj112 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj112" "\n" "#(struct:physical 112 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj112 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj112.color (Color "white")) (setv obj112.group 112) (setv obj112_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj112.png")) (image-bindings.append [obj112 obj112_image]) (user_shapes.append obj112) obj112))) (setv obj112 (make_obj112 0 0 False)) (setv (. obj112 mass) 10) (obj112.hit [5650.352145375982 16966.077156584724] obj112.position) (defn make_obj113 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj113" "\n" "#(struct:physical 113 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj113 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj113.color (Color "white")) (setv obj113.group 113) (setv obj113_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj113.png")) (image-bindings.append [obj113 obj113_image]) (user_shapes.append obj113) obj113))) (setv obj113 (make_obj113 0 0 False)) (setv (. obj113 mass) 10) (obj113.hit [10450.180986346139 46635.88162517719] obj113.position) (defn make_obj114 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj114" "\n" "#(struct:physical 114 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj114 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj114.color (Color "white")) (setv obj114.group 114) (setv obj114_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj114.png")) (image-bindings.append [obj114 obj114_image]) (user_shapes.append obj114) obj114))) (setv obj114 (make_obj114 0 0 False)) (setv (. obj114 mass) 10) (obj114.hit [-29327.500914251475 -18978.244729217815] obj114.position) (deactivate f))))) (setv space (. obj94 body space)) (setv ch (space.add-wildcard-collision-handler obj94.collision_type)) (setv ch.post_solve on_collide_94)) (do (setv (. obj71 mass) 10)) (motor obj71 0) (do (setv obj71.gravity (, 0 -100))) (do (defn on_click_71 [keys] (do (global obj71) (setv f obj71) (if (or (not f) (not f.body)) (return False)) (setv p f.body.position) (if (and (mouse-clicked) (obj71.inside (mouse-point)) (. obj71 active)) (do (do (defn make_obj73 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj73" "\n" "#(struct:physical 73 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj73 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj73.color (Color "white")) (setv obj73.group 73) (setv obj73_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj73.png")) (image-bindings.append [obj73 obj73_image]) (user_shapes.append obj73) obj73))) (setv obj73 (make_obj73 0 0 False)) (setv (. obj73 mass) 10) (obj73.hit [49594.90683761907 29261.976454055664] obj73.position) (defn make_obj74 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj74" "\n" "#(struct:physical 74 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj74 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj74.color (Color "white")) (setv obj74.group 74) (setv obj74_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj74.png")) (image-bindings.append [obj74 obj74_image]) (user_shapes.append obj74) obj74))) (setv obj74 (make_obj74 0 0 False)) (setv (. obj74 mass) 10) (obj74.hit [22041.5708107517 48662.64323280887] obj74.position) (defn make_obj75 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj75" "\n" "#(struct:physical 75 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj75 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj75.color (Color "white")) (setv obj75.group 75) (setv obj75_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj75.png")) (image-bindings.append [obj75 obj75_image]) (user_shapes.append obj75) obj75))) (setv obj75 (make_obj75 0 0 False)) (setv (. obj75 mass) 10) (obj75.hit [48569.45721023882 8105.1646466074235] obj75.position) (defn make_obj76 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj76" "\n" "#(struct:physical 76 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj76 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj76.color (Color "white")) (setv obj76.group 76) (setv obj76_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj76.png")) (image-bindings.append [obj76 obj76_image]) (user_shapes.append obj76) obj76))) (setv obj76 (make_obj76 0 0 False)) (setv (. obj76 mass) 10) (obj76.hit [-16199.45072324149 49636.03451016714] obj76.position) (defn make_obj78 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj78" "\n" "#(struct:physical 78 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj78 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj78.color (Color "white")) (setv obj78.group 78) (setv obj78_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj78.png")) (image-bindings.append [obj78 obj78_image]) (user_shapes.append obj78) obj78))) (setv obj78 (make_obj78 0 0 False)) (setv (. obj78 mass) 10) (obj78.hit [-7481.5401239693965 43843.29033070347] obj78.position) (defn make_obj79 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj79" "\n" "#(struct:physical 79 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj79 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj79.color (Color "white")) (setv obj79.group 79) (setv obj79_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj79.png")) (image-bindings.append [obj79 obj79_image]) (user_shapes.append obj79) obj79))) (setv obj79 (make_obj79 0 0 False)) (setv (. obj79 mass) 10) (obj79.hit [27978.188735307966 -211.44969947206118] obj79.position) (defn make_obj80 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj80" "\n" "#(struct:physical 80 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj80 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj80.color (Color "white")) (setv obj80.group 80) (setv obj80_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj80.png")) (image-bindings.append [obj80 obj80_image]) (user_shapes.append obj80) obj80))) (setv obj80 (make_obj80 0 0 False)) (setv (. obj80 mass) 10) (obj80.hit [-28893.160356622502 -33591.5233909704] obj80.position) (defn make_obj81 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj81" "\n" "#(struct:physical 81 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj81 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj81.color (Color "white")) (setv obj81.group 81) (setv obj81_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj81.png")) (image-bindings.append [obj81 obj81_image]) (user_shapes.append obj81) obj81))) (setv obj81 (make_obj81 0 0 False)) (setv (. obj81 mass) 10) (obj81.hit [19481.18413614256 -43450.47458487067] obj81.position) (defn make_obj83 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj83" "\n" "#(struct:physical 83 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj83 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj83.color (Color "white")) (setv obj83.group 83) (setv obj83_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj83.png")) (image-bindings.append [obj83 obj83_image]) (user_shapes.append obj83) obj83))) (setv obj83 (make_obj83 0 0 False)) (setv (. obj83 mass) 10) (obj83.hit [40041.68604236812 -42315.24085662563] obj83.position) (defn make_obj84 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj84" "\n" "#(struct:physical 84 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj84 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj84.color (Color "white")) (setv obj84.group 84) (setv obj84_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj84.png")) (image-bindings.append [obj84 obj84_image]) (user_shapes.append obj84) obj84))) (setv obj84 (make_obj84 0 0 False)) (setv (. obj84 mass) 10) (obj84.hit [-31301.36616776794 -21291.148878764117] obj84.position) (defn make_obj85 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj85" "\n" "#(struct:physical 85 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj85 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj85.color (Color "white")) (setv obj85.group 85) (setv obj85_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj85.png")) (image-bindings.append [obj85 obj85_image]) (user_shapes.append obj85) obj85))) (setv obj85 (make_obj85 0 0 False)) (setv (. obj85 mass) 10) (obj85.hit [-37718.49543448702 -2542.2976419324696] obj85.position) (defn make_obj86 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj86" "\n" "#(struct:physical 86 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj86 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj86.color (Color "white")) (setv obj86.group 86) (setv obj86_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj86.png")) (image-bindings.append [obj86 obj86_image]) (user_shapes.append obj86) obj86))) (setv obj86 (make_obj86 0 0 False)) (setv (. obj86 mass) 10) (obj86.hit [-27075.271245943477 -19418.434249012338] obj86.position) (defn make_obj88 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj88" "\n" "#(struct:physical 88 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj88 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj88.color (Color "white")) (setv obj88.group 88) (setv obj88_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj88.png")) (image-bindings.append [obj88 obj88_image]) (user_shapes.append obj88) obj88))) (setv obj88 (make_obj88 0 0 False)) (setv (. obj88 mass) 10) (obj88.hit [-14664.756495102622 -49096.885535901456] obj88.position) (defn make_obj89 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj89" "\n" "#(struct:physical 89 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj89 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj89.color (Color "white")) (setv obj89.group 89) (setv obj89_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj89.png")) (image-bindings.append [obj89 obj89_image]) (user_shapes.append obj89) obj89))) (setv obj89 (make_obj89 0 0 False)) (setv (. obj89 mass) 10) (obj89.hit [-39012.14702393081 20791.37298851405] obj89.position) (defn make_obj90 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj90" "\n" "#(struct:physical 90 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj90 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj90.color (Color "white")) (setv obj90.group 90) (setv obj90_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj90.png")) (image-bindings.append [obj90 obj90_image]) (user_shapes.append obj90) obj90))) (setv obj90 (make_obj90 0 0 False)) (setv (. obj90 mass) 10) (obj90.hit [9748.920618504177 11591.730502219863] obj90.position) (defn make_obj91 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj91" "\n" "#(struct:physical 91 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj91 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj91.color (Color "white")) (setv obj91.group 91) (setv obj91_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj91.png")) (image-bindings.append [obj91 obj91_image]) (user_shapes.append obj91) obj91))) (setv obj91 (make_obj91 0 0 False)) (setv (. obj91 mass) 10) (obj91.hit [23196.359007815525 4662.493725726083] obj91.position) (deactivate f)) (return True))))) (add-observer on_click_71)) (do (defn on_collide_71 [arbiter space data] (do (setv f obj71) (setv p f.body.position) (setv friction (. arbiter friction)) (setv restitution (. arbiter restitution)) (setv total_impulse (. arbiter total_impulse)) (setv energy_loss (. arbiter total_ke)) (if (and (> friction 0) (> energy-loss 50000000)) (do (defn make_obj73 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj73" "\n" "#(struct:physical 73 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj73 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj73.color (Color "white")) (setv obj73.group 73) (setv obj73_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj73.png")) (image-bindings.append [obj73 obj73_image]) (user_shapes.append obj73) obj73))) (setv obj73 (make_obj73 0 0 False)) (setv (. obj73 mass) 10) (obj73.hit [49594.90683761907 29261.976454055664] obj73.position) (defn make_obj74 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj74" "\n" "#(struct:physical 74 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj74 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj74.color (Color "white")) (setv obj74.group 74) (setv obj74_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj74.png")) (image-bindings.append [obj74 obj74_image]) (user_shapes.append obj74) obj74))) (setv obj74 (make_obj74 0 0 False)) (setv (. obj74 mass) 10) (obj74.hit [22041.5708107517 48662.64323280887] obj74.position) (defn make_obj75 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj75" "\n" "#(struct:physical 75 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj75 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj75.color (Color "white")) (setv obj75.group 75) (setv obj75_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj75.png")) (image-bindings.append [obj75 obj75_image]) (user_shapes.append obj75) obj75))) (setv obj75 (make_obj75 0 0 False)) (setv (. obj75 mass) 10) (obj75.hit [48569.45721023882 8105.1646466074235] obj75.position) (defn make_obj76 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj76" "\n" "#(struct:physical 76 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj76 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj76.color (Color "white")) (setv obj76.group 76) (setv obj76_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj76.png")) (image-bindings.append [obj76 obj76_image]) (user_shapes.append obj76) obj76))) (setv obj76 (make_obj76 0 0 False)) (setv (. obj76 mass) 10) (obj76.hit [-16199.45072324149 49636.03451016714] obj76.position) (defn make_obj78 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj78" "\n" "#(struct:physical 78 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj78 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj78.color (Color "white")) (setv obj78.group 78) (setv obj78_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj78.png")) (image-bindings.append [obj78 obj78_image]) (user_shapes.append obj78) obj78))) (setv obj78 (make_obj78 0 0 False)) (setv (. obj78 mass) 10) (obj78.hit [-7481.5401239693965 43843.29033070347] obj78.position) (defn make_obj79 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj79" "\n" "#(struct:physical 79 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj79 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj79.color (Color "white")) (setv obj79.group 79) (setv obj79_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj79.png")) (image-bindings.append [obj79 obj79_image]) (user_shapes.append obj79) obj79))) (setv obj79 (make_obj79 0 0 False)) (setv (. obj79 mass) 10) (obj79.hit [27978.188735307966 -211.44969947206118] obj79.position) (defn make_obj80 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj80" "\n" "#(struct:physical 80 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj80 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj80.color (Color "white")) (setv obj80.group 80) (setv obj80_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj80.png")) (image-bindings.append [obj80 obj80_image]) (user_shapes.append obj80) obj80))) (setv obj80 (make_obj80 0 0 False)) (setv (. obj80 mass) 10) (obj80.hit [-28893.160356622502 -33591.5233909704] obj80.position) (defn make_obj81 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj81" "\n" "#(struct:physical 81 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj81 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj81.color (Color "white")) (setv obj81.group 81) (setv obj81_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj81.png")) (image-bindings.append [obj81 obj81_image]) (user_shapes.append obj81) obj81))) (setv obj81 (make_obj81 0 0 False)) (setv (. obj81 mass) 10) (obj81.hit [19481.18413614256 -43450.47458487067] obj81.position) (defn make_obj83 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj83" "\n" "#(struct:physical 83 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj83 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj83.color (Color "white")) (setv obj83.group 83) (setv obj83_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj83.png")) (image-bindings.append [obj83 obj83_image]) (user_shapes.append obj83) obj83))) (setv obj83 (make_obj83 0 0 False)) (setv (. obj83 mass) 10) (obj83.hit [40041.68604236812 -42315.24085662563] obj83.position) (defn make_obj84 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj84" "\n" "#(struct:physical 84 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj84 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj84.color (Color "white")) (setv obj84.group 84) (setv obj84_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj84.png")) (image-bindings.append [obj84 obj84_image]) (user_shapes.append obj84) obj84))) (setv obj84 (make_obj84 0 0 False)) (setv (. obj84 mass) 10) (obj84.hit [-31301.36616776794 -21291.148878764117] obj84.position) (defn make_obj85 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj85" "\n" "#(struct:physical 85 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj85 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj85.color (Color "white")) (setv obj85.group 85) (setv obj85_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj85.png")) (image-bindings.append [obj85 obj85_image]) (user_shapes.append obj85) obj85))) (setv obj85 (make_obj85 0 0 False)) (setv (. obj85 mass) 10) (obj85.hit [-37718.49543448702 -2542.2976419324696] obj85.position) (defn make_obj86 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj86" "\n" "#(struct:physical 86 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj86 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj86.color (Color "white")) (setv obj86.group 86) (setv obj86_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj86.png")) (image-bindings.append [obj86 obj86_image]) (user_shapes.append obj86) obj86))) (setv obj86 (make_obj86 0 0 False)) (setv (. obj86 mass) 10) (obj86.hit [-27075.271245943477 -19418.434249012338] obj86.position) (defn make_obj88 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj88" "\n" "#(struct:physical 88 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj88 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj88.color (Color "white")) (setv obj88.group 88) (setv obj88_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj88.png")) (image-bindings.append [obj88 obj88_image]) (user_shapes.append obj88) obj88))) (setv obj88 (make_obj88 0 0 False)) (setv (. obj88 mass) 10) (obj88.hit [-14664.756495102622 -49096.885535901456] obj88.position) (defn make_obj89 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj89" "\n" "#(struct:physical 89 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj89 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj89.color (Color "white")) (setv obj89.group 89) (setv obj89_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj89.png")) (image-bindings.append [obj89 obj89_image]) (user_shapes.append obj89) obj89))) (setv obj89 (make_obj89 0 0 False)) (setv (. obj89 mass) 10) (obj89.hit [-39012.14702393081 20791.37298851405] obj89.position) (defn make_obj90 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj90" "\n" "#(struct:physical 90 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj90 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj90.color (Color "white")) (setv obj90.group 90) (setv obj90_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj90.png")) (image-bindings.append [obj90 obj90_image]) (user_shapes.append obj90) obj90))) (setv obj90 (make_obj90 0 0 False)) (setv (. obj90 mass) 10) (obj90.hit [9748.920618504177 11591.730502219863] obj90.position) (defn make_obj91 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj91" "\n" "#(struct:physical 91 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj91 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj91.color (Color "white")) (setv obj91.group 91) (setv obj91_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj91.png")) (image-bindings.append [obj91 obj91_image]) (user_shapes.append obj91) obj91))) (setv obj91 (make_obj91 0 0 False)) (setv (. obj91 mass) 10) (obj91.hit [23196.359007815525 4662.493725726083] obj91.position) (deactivate f))))) (setv space (. obj71 body space)) (setv ch (space.add-wildcard-collision-handler obj71.collision_type)) (setv ch.post_solve on_collide_71)) (do (setv (. obj48 mass) 10)) (motor obj48 0) (do (setv obj48.gravity (, 0 -100))) (do (defn on_click_48 [keys] (do (global obj48) (setv f obj48) (if (or (not f) (not f.body)) (return False)) (setv p f.body.position) (if (and (mouse-clicked) (obj48.inside (mouse-point)) (. obj48 active)) (do (do (defn make_obj50 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj50" "\n" "#(struct:physical 50 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj50 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj50.color (Color "white")) (setv obj50.group 50) (setv obj50_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj50.png")) (image-bindings.append [obj50 obj50_image]) (user_shapes.append obj50) obj50))) (setv obj50 (make_obj50 0 0 False)) (setv (. obj50 mass) 10) (obj50.hit [26714.999637734145 1683.0351087430827] obj50.position) (defn make_obj51 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj51" "\n" "#(struct:physical 51 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj51 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj51.color (Color "white")) (setv obj51.group 51) (setv obj51_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj51.png")) (image-bindings.append [obj51 obj51_image]) (user_shapes.append obj51) obj51))) (setv obj51 (make_obj51 0 0 False)) (setv (. obj51 mass) 10) (obj51.hit [30469.013363484948 -38869.471215840895] obj51.position) (defn make_obj52 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj52" "\n" "#(struct:physical 52 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj52 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj52.color (Color "white")) (setv obj52.group 52) (setv obj52_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj52.png")) (image-bindings.append [obj52 obj52_image]) (user_shapes.append obj52) obj52))) (setv obj52 (make_obj52 0 0 False)) (setv (. obj52 mass) 10) (obj52.hit [35931.893012913366 20383.06091904563] obj52.position) (defn make_obj53 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj53" "\n" "#(struct:physical 53 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj53 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj53.color (Color "white")) (setv obj53.group 53) (setv obj53_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj53.png")) (image-bindings.append [obj53 obj53_image]) (user_shapes.append obj53) obj53))) (setv obj53 (make_obj53 0 0 False)) (setv (. obj53 mass) 10) (obj53.hit [17950.846495520338 5913.292809847029] obj53.position) (defn make_obj55 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj55" "\n" "#(struct:physical 55 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj55 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj55.color (Color "white")) (setv obj55.group 55) (setv obj55_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj55.png")) (image-bindings.append [obj55 obj55_image]) (user_shapes.append obj55) obj55))) (setv obj55 (make_obj55 0 0 False)) (setv (. obj55 mass) 10) (obj55.hit [5988.11021668998 15800.436745977699] obj55.position) (defn make_obj56 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj56" "\n" "#(struct:physical 56 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj56 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj56.color (Color "white")) (setv obj56.group 56) (setv obj56_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj56.png")) (image-bindings.append [obj56 obj56_image]) (user_shapes.append obj56) obj56))) (setv obj56 (make_obj56 0 0 False)) (setv (. obj56 mass) 10) (obj56.hit [19178.721492452096 -10344.671213927584] obj56.position) (defn make_obj57 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj57" "\n" "#(struct:physical 57 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj57 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj57.color (Color "white")) (setv obj57.group 57) (setv obj57_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj57.png")) (image-bindings.append [obj57 obj57_image]) (user_shapes.append obj57) obj57))) (setv obj57 (make_obj57 0 0 False)) (setv (. obj57 mass) 10) (obj57.hit [-25765.193057982287 19035.895322325232] obj57.position) (defn make_obj58 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj58" "\n" "#(struct:physical 58 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj58 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj58.color (Color "white")) (setv obj58.group 58) (setv obj58_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj58.png")) (image-bindings.append [obj58 obj58_image]) (user_shapes.append obj58) obj58))) (setv obj58 (make_obj58 0 0 False)) (setv (. obj58 mass) 10) (obj58.hit [-14970.019882024295 -7414.763593643627] obj58.position) (defn make_obj60 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj60" "\n" "#(struct:physical 60 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj60 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj60.color (Color "white")) (setv obj60.group 60) (setv obj60_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj60.png")) (image-bindings.append [obj60 obj60_image]) (user_shapes.append obj60) obj60))) (setv obj60 (make_obj60 0 0 False)) (setv (. obj60 mass) 10) (obj60.hit [-35136.269174596295 -39400.37472529289] obj60.position) (defn make_obj61 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj61" "\n" "#(struct:physical 61 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj61 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj61.color (Color "white")) (setv obj61.group 61) (setv obj61_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj61.png")) (image-bindings.append [obj61 obj61_image]) (user_shapes.append obj61) obj61))) (setv obj61 (make_obj61 0 0 False)) (setv (. obj61 mass) 10) (obj61.hit [49349.006513271815 14115.748260187844] obj61.position) (defn make_obj62 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj62" "\n" "#(struct:physical 62 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj62 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj62.color (Color "white")) (setv obj62.group 62) (setv obj62_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj62.png")) (image-bindings.append [obj62 obj62_image]) (user_shapes.append obj62) obj62))) (setv obj62 (make_obj62 0 0 False)) (setv (. obj62 mass) 10) (obj62.hit [7350.236440275148 -15504.239971023497] obj62.position) (defn make_obj63 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj63" "\n" "#(struct:physical 63 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj63 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj63.color (Color "white")) (setv obj63.group 63) (setv obj63_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj63.png")) (image-bindings.append [obj63 obj63_image]) (user_shapes.append obj63) obj63))) (setv obj63 (make_obj63 0 0 False)) (setv (. obj63 mass) 10) (obj63.hit [48187.48671631266 39598.61356683813] obj63.position) (defn make_obj65 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj65" "\n" "#(struct:physical 65 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj65 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj65.color (Color "white")) (setv obj65.group 65) (setv obj65_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj65.png")) (image-bindings.append [obj65 obj65_image]) (user_shapes.append obj65) obj65))) (setv obj65 (make_obj65 0 0 False)) (setv (. obj65 mass) 10) (obj65.hit [-3193.6135292685576 -44830.48548566666] obj65.position) (defn make_obj66 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj66" "\n" "#(struct:physical 66 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj66 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj66.color (Color "white")) (setv obj66.group 66) (setv obj66_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj66.png")) (image-bindings.append [obj66 obj66_image]) (user_shapes.append obj66) obj66))) (setv obj66 (make_obj66 0 0 False)) (setv (. obj66 mass) 10) (obj66.hit [-15833.124749662806 999.673364668175] obj66.position) (defn make_obj67 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj67" "\n" "#(struct:physical 67 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj67 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj67.color (Color "white")) (setv obj67.group 67) (setv obj67_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj67.png")) (image-bindings.append [obj67 obj67_image]) (user_shapes.append obj67) obj67))) (setv obj67 (make_obj67 0 0 False)) (setv (. obj67 mass) 10) (obj67.hit [-22837.911208692363 -4858.49683419041] obj67.position) (defn make_obj68 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj68" "\n" "#(struct:physical 68 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj68 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj68.color (Color "white")) (setv obj68.group 68) (setv obj68_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj68.png")) (image-bindings.append [obj68 obj68_image]) (user_shapes.append obj68) obj68))) (setv obj68 (make_obj68 0 0 False)) (setv (. obj68 mass) 10) (obj68.hit [22383.746936875265 6394.778944112833] obj68.position) (deactivate f)) (return True))))) (add-observer on_click_48)) (do (defn on_collide_48 [arbiter space data] (do (setv f obj48) (setv p f.body.position) (setv friction (. arbiter friction)) (setv restitution (. arbiter restitution)) (setv total_impulse (. arbiter total_impulse)) (setv energy_loss (. arbiter total_ke)) (if (and (> friction 0) (> energy-loss 50000000)) (do (defn make_obj50 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj50" "\n" "#(struct:physical 50 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj50 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj50.color (Color "white")) (setv obj50.group 50) (setv obj50_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj50.png")) (image-bindings.append [obj50 obj50_image]) (user_shapes.append obj50) obj50))) (setv obj50 (make_obj50 0 0 False)) (setv (. obj50 mass) 10) (obj50.hit [26714.999637734145 1683.0351087430827] obj50.position) (defn make_obj51 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj51" "\n" "#(struct:physical 51 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj51 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj51.color (Color "white")) (setv obj51.group 51) (setv obj51_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj51.png")) (image-bindings.append [obj51 obj51_image]) (user_shapes.append obj51) obj51))) (setv obj51 (make_obj51 0 0 False)) (setv (. obj51 mass) 10) (obj51.hit [30469.013363484948 -38869.471215840895] obj51.position) (defn make_obj52 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj52" "\n" "#(struct:physical 52 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj52 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj52.color (Color "white")) (setv obj52.group 52) (setv obj52_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj52.png")) (image-bindings.append [obj52 obj52_image]) (user_shapes.append obj52) obj52))) (setv obj52 (make_obj52 0 0 False)) (setv (. obj52 mass) 10) (obj52.hit [35931.893012913366 20383.06091904563] obj52.position) (defn make_obj53 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj53" "\n" "#(struct:physical 53 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj53 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj53.color (Color "white")) (setv obj53.group 53) (setv obj53_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj53.png")) (image-bindings.append [obj53 obj53_image]) (user_shapes.append obj53) obj53))) (setv obj53 (make_obj53 0 0 False)) (setv (. obj53 mass) 10) (obj53.hit [17950.846495520338 5913.292809847029] obj53.position) (defn make_obj55 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj55" "\n" "#(struct:physical 55 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj55 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj55.color (Color "white")) (setv obj55.group 55) (setv obj55_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj55.png")) (image-bindings.append [obj55 obj55_image]) (user_shapes.append obj55) obj55))) (setv obj55 (make_obj55 0 0 False)) (setv (. obj55 mass) 10) (obj55.hit [5988.11021668998 15800.436745977699] obj55.position) (defn make_obj56 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj56" "\n" "#(struct:physical 56 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj56 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj56.color (Color "white")) (setv obj56.group 56) (setv obj56_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj56.png")) (image-bindings.append [obj56 obj56_image]) (user_shapes.append obj56) obj56))) (setv obj56 (make_obj56 0 0 False)) (setv (. obj56 mass) 10) (obj56.hit [19178.721492452096 -10344.671213927584] obj56.position) (defn make_obj57 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj57" "\n" "#(struct:physical 57 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj57 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj57.color (Color "white")) (setv obj57.group 57) (setv obj57_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj57.png")) (image-bindings.append [obj57 obj57_image]) (user_shapes.append obj57) obj57))) (setv obj57 (make_obj57 0 0 False)) (setv (. obj57 mass) 10) (obj57.hit [-25765.193057982287 19035.895322325232] obj57.position) (defn make_obj58 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj58" "\n" "#(struct:physical 58 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj58 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj58.color (Color "white")) (setv obj58.group 58) (setv obj58_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj58.png")) (image-bindings.append [obj58 obj58_image]) (user_shapes.append obj58) obj58))) (setv obj58 (make_obj58 0 0 False)) (setv (. obj58 mass) 10) (obj58.hit [-14970.019882024295 -7414.763593643627] obj58.position) (defn make_obj60 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj60" "\n" "#(struct:physical 60 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj60 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj60.color (Color "white")) (setv obj60.group 60) (setv obj60_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj60.png")) (image-bindings.append [obj60 obj60_image]) (user_shapes.append obj60) obj60))) (setv obj60 (make_obj60 0 0 False)) (setv (. obj60 mass) 10) (obj60.hit [-35136.269174596295 -39400.37472529289] obj60.position) (defn make_obj61 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj61" "\n" "#(struct:physical 61 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj61 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj61.color (Color "white")) (setv obj61.group 61) (setv obj61_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj61.png")) (image-bindings.append [obj61 obj61_image]) (user_shapes.append obj61) obj61))) (setv obj61 (make_obj61 0 0 False)) (setv (. obj61 mass) 10) (obj61.hit [49349.006513271815 14115.748260187844] obj61.position) (defn make_obj62 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj62" "\n" "#(struct:physical 62 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj62 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj62.color (Color "white")) (setv obj62.group 62) (setv obj62_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj62.png")) (image-bindings.append [obj62 obj62_image]) (user_shapes.append obj62) obj62))) (setv obj62 (make_obj62 0 0 False)) (setv (. obj62 mass) 10) (obj62.hit [7350.236440275148 -15504.239971023497] obj62.position) (defn make_obj63 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj63" "\n" "#(struct:physical 63 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj63 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj63.color (Color "white")) (setv obj63.group 63) (setv obj63_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj63.png")) (image-bindings.append [obj63 obj63_image]) (user_shapes.append obj63) obj63))) (setv obj63 (make_obj63 0 0 False)) (setv (. obj63 mass) 10) (obj63.hit [48187.48671631266 39598.61356683813] obj63.position) (defn make_obj65 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj65" "\n" "#(struct:physical 65 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj65 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj65.color (Color "white")) (setv obj65.group 65) (setv obj65_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj65.png")) (image-bindings.append [obj65 obj65_image]) (user_shapes.append obj65) obj65))) (setv obj65 (make_obj65 0 0 False)) (setv (. obj65 mass) 10) (obj65.hit [-3193.6135292685576 -44830.48548566666] obj65.position) (defn make_obj66 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj66" "\n" "#(struct:physical 66 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj66 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj66.color (Color "white")) (setv obj66.group 66) (setv obj66_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj66.png")) (image-bindings.append [obj66 obj66_image]) (user_shapes.append obj66) obj66))) (setv obj66 (make_obj66 0 0 False)) (setv (. obj66 mass) 10) (obj66.hit [-15833.124749662806 999.673364668175] obj66.position) (defn make_obj67 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj67" "\n" "#(struct:physical 67 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj67 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj67.color (Color "white")) (setv obj67.group 67) (setv obj67_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj67.png")) (image-bindings.append [obj67 obj67_image]) (user_shapes.append obj67) obj67))) (setv obj67 (make_obj67 0 0 False)) (setv (. obj67 mass) 10) (obj67.hit [-22837.911208692363 -4858.49683419041] obj67.position) (defn make_obj68 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj68" "\n" "#(struct:physical 68 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj68 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj68.color (Color "white")) (setv obj68.group 68) (setv obj68_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj68.png")) (image-bindings.append [obj68 obj68_image]) (user_shapes.append obj68) obj68))) (setv obj68 (make_obj68 0 0 False)) (setv (. obj68 mass) 10) (obj68.hit [22383.746936875265 6394.778944112833] obj68.position) (deactivate f))))) (setv space (. obj48 body space)) (setv ch (space.add-wildcard-collision-handler obj48.collision_type)) (setv ch.post_solve on_collide_48)) (do (setv (. obj25 mass) 10)) (motor obj25 0) (do (setv obj25.gravity (, 0 -100))) (do (defn on_click_25 [keys] (do (global obj25) (setv f obj25) (if (or (not f) (not f.body)) (return False)) (setv p f.body.position) (if (and (mouse-clicked) (obj25.inside (mouse-point)) (. obj25 active)) (do (do (defn make_obj27 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj27" "\n" "#(struct:physical 27 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj27 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj27.color (Color "white")) (setv obj27.group 27) (setv obj27_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj27.png")) (image-bindings.append [obj27 obj27_image]) (user_shapes.append obj27) obj27))) (setv obj27 (make_obj27 0 0 False)) (setv (. obj27 mass) 10) (obj27.hit [29393.39720500323 14941.429395186104] obj27.position) (defn make_obj28 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj28" "\n" "#(struct:physical 28 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj28 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj28.color (Color "white")) (setv obj28.group 28) (setv obj28_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj28.png")) (image-bindings.append [obj28 obj28_image]) (user_shapes.append obj28) obj28))) (setv obj28 (make_obj28 0 0 False)) (setv (. obj28 mass) 10) (obj28.hit [16047.150487501014 -22616.491910123805] obj28.position) (defn make_obj29 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj29" "\n" "#(struct:physical 29 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj29 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj29.color (Color "white")) (setv obj29.group 29) (setv obj29_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj29.png")) (image-bindings.append [obj29 obj29_image]) (user_shapes.append obj29) obj29))) (setv obj29 (make_obj29 0 0 False)) (setv (. obj29 mass) 10) (obj29.hit [32075.8781330154 -49002.8360608476] obj29.position) (defn make_obj30 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj30" "\n" "#(struct:physical 30 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj30 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj30.color (Color "white")) (setv obj30.group 30) (setv obj30_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj30.png")) (image-bindings.append [obj30 obj30_image]) (user_shapes.append obj30) obj30))) (setv obj30 (make_obj30 0 0 False)) (setv (. obj30 mass) 10) (obj30.hit [27651.830541803676 10125.662085166608] obj30.position) (defn make_obj32 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj32" "\n" "#(struct:physical 32 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj32 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj32.color (Color "white")) (setv obj32.group 32) (setv obj32_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj32.png")) (image-bindings.append [obj32 obj32_image]) (user_shapes.append obj32) obj32))) (setv obj32 (make_obj32 0 0 False)) (setv (. obj32 mass) 10) (obj32.hit [5181.050085848772 -41857.13143234219] obj32.position) (defn make_obj33 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj33" "\n" "#(struct:physical 33 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj33 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj33.color (Color "white")) (setv obj33.group 33) (setv obj33_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj33.png")) (image-bindings.append [obj33 obj33_image]) (user_shapes.append obj33) obj33))) (setv obj33 (make_obj33 0 0 False)) (setv (. obj33 mass) 10) (obj33.hit [43910.67308220548 13391.130553873998] obj33.position) (defn make_obj34 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj34" "\n" "#(struct:physical 34 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj34 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj34.color (Color "white")) (setv obj34.group 34) (setv obj34_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj34.png")) (image-bindings.append [obj34 obj34_image]) (user_shapes.append obj34) obj34))) (setv obj34 (make_obj34 0 0 False)) (setv (. obj34 mass) 10) (obj34.hit [31467.295890952824 -28546.411739115985] obj34.position) (defn make_obj35 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj35" "\n" "#(struct:physical 35 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj35 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj35.color (Color "white")) (setv obj35.group 35) (setv obj35_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj35.png")) (image-bindings.append [obj35 obj35_image]) (user_shapes.append obj35) obj35))) (setv obj35 (make_obj35 0 0 False)) (setv (. obj35 mass) 10) (obj35.hit [-27401.128131764624 -41937.15705138833] obj35.position) (defn make_obj37 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj37" "\n" "#(struct:physical 37 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj37 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj37.color (Color "white")) (setv obj37.group 37) (setv obj37_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj37.png")) (image-bindings.append [obj37 obj37_image]) (user_shapes.append obj37) obj37))) (setv obj37 (make_obj37 0 0 False)) (setv (. obj37 mass) 10) (obj37.hit [46840.37299426217 42215.363630278895] obj37.position) (defn make_obj38 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj38" "\n" "#(struct:physical 38 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj38 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj38.color (Color "white")) (setv obj38.group 38) (setv obj38_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj38.png")) (image-bindings.append [obj38 obj38_image]) (user_shapes.append obj38) obj38))) (setv obj38 (make_obj38 0 0 False)) (setv (. obj38 mass) 10) (obj38.hit [6950.228741776111 44397.68056262229] obj38.position) (defn make_obj39 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj39" "\n" "#(struct:physical 39 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj39 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj39.color (Color "white")) (setv obj39.group 39) (setv obj39_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj39.png")) (image-bindings.append [obj39 obj39_image]) (user_shapes.append obj39) obj39))) (setv obj39 (make_obj39 0 0 False)) (setv (. obj39 mass) 10) (obj39.hit [26735.006054137193 -1168.4781506293075] obj39.position) (defn make_obj40 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj40" "\n" "#(struct:physical 40 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj40 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj40.color (Color "white")) (setv obj40.group 40) (setv obj40_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj40.png")) (image-bindings.append [obj40 obj40_image]) (user_shapes.append obj40) obj40))) (setv obj40 (make_obj40 0 0 False)) (setv (. obj40 mass) 10) (obj40.hit [46654.03429047186 46797.61825453132] obj40.position) (defn make_obj42 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj42" "\n" "#(struct:physical 42 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj42 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj42.color (Color "white")) (setv obj42.group 42) (setv obj42_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj42.png")) (image-bindings.append [obj42 obj42_image]) (user_shapes.append obj42) obj42))) (setv obj42 (make_obj42 0 0 False)) (setv (. obj42 mass) 10) (obj42.hit [-46898.85334925761 21380.94351329755] obj42.position) (defn make_obj43 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj43" "\n" "#(struct:physical 43 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj43 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj43.color (Color "white")) (setv obj43.group 43) (setv obj43_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj43.png")) (image-bindings.append [obj43 obj43_image]) (user_shapes.append obj43) obj43))) (setv obj43 (make_obj43 0 0 False)) (setv (. obj43 mass) 10) (obj43.hit [20102.36947827341 -6890.163927607726] obj43.position) (defn make_obj44 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj44" "\n" "#(struct:physical 44 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj44 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj44.color (Color "white")) (setv obj44.group 44) (setv obj44_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj44.png")) (image-bindings.append [obj44 obj44_image]) (user_shapes.append obj44) obj44))) (setv obj44 (make_obj44 0 0 False)) (setv (. obj44 mass) 10) (obj44.hit [-34976.51006912675 -22628.081102539054] obj44.position) (defn make_obj45 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj45" "\n" "#(struct:physical 45 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj45 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj45.color (Color "white")) (setv obj45.group 45) (setv obj45_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj45.png")) (image-bindings.append [obj45 obj45_image]) (user_shapes.append obj45) obj45))) (setv obj45 (make_obj45 0 0 False)) (setv (. obj45 mass) 10) (obj45.hit [-44317.59205601624 5429.15552604579] obj45.position) (deactivate f)) (return True))))) (add-observer on_click_25)) (do (defn on_collide_25 [arbiter space data] (do (setv f obj25) (setv p f.body.position) (setv friction (. arbiter friction)) (setv restitution (. arbiter restitution)) (setv total_impulse (. arbiter total_impulse)) (setv energy_loss (. arbiter total_ke)) (if (and (> friction 0) (> energy-loss 50000000)) (do (defn make_obj27 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj27" "\n" "#(struct:physical 27 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj27 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj27.color (Color "white")) (setv obj27.group 27) (setv obj27_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj27.png")) (image-bindings.append [obj27 obj27_image]) (user_shapes.append obj27) obj27))) (setv obj27 (make_obj27 0 0 False)) (setv (. obj27 mass) 10) (obj27.hit [29393.39720500323 14941.429395186104] obj27.position) (defn make_obj28 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj28" "\n" "#(struct:physical 28 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj28 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj28.color (Color "white")) (setv obj28.group 28) (setv obj28_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj28.png")) (image-bindings.append [obj28 obj28_image]) (user_shapes.append obj28) obj28))) (setv obj28 (make_obj28 0 0 False)) (setv (. obj28 mass) 10) (obj28.hit [16047.150487501014 -22616.491910123805] obj28.position) (defn make_obj29 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj29" "\n" "#(struct:physical 29 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj29 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj29.color (Color "white")) (setv obj29.group 29) (setv obj29_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj29.png")) (image-bindings.append [obj29 obj29_image]) (user_shapes.append obj29) obj29))) (setv obj29 (make_obj29 0 0 False)) (setv (. obj29 mass) 10) (obj29.hit [32075.8781330154 -49002.8360608476] obj29.position) (defn make_obj30 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj30" "\n" "#(struct:physical 30 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj30 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj30.color (Color "white")) (setv obj30.group 30) (setv obj30_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj30.png")) (image-bindings.append [obj30 obj30_image]) (user_shapes.append obj30) obj30))) (setv obj30 (make_obj30 0 0 False)) (setv (. obj30 mass) 10) (obj30.hit [27651.830541803676 10125.662085166608] obj30.position) (defn make_obj32 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj32" "\n" "#(struct:physical 32 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj32 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj32.color (Color "white")) (setv obj32.group 32) (setv obj32_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj32.png")) (image-bindings.append [obj32 obj32_image]) (user_shapes.append obj32) obj32))) (setv obj32 (make_obj32 0 0 False)) (setv (. obj32 mass) 10) (obj32.hit [5181.050085848772 -41857.13143234219] obj32.position) (defn make_obj33 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj33" "\n" "#(struct:physical 33 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj33 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj33.color (Color "white")) (setv obj33.group 33) (setv obj33_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj33.png")) (image-bindings.append [obj33 obj33_image]) (user_shapes.append obj33) obj33))) (setv obj33 (make_obj33 0 0 False)) (setv (. obj33 mass) 10) (obj33.hit [43910.67308220548 13391.130553873998] obj33.position) (defn make_obj34 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj34" "\n" "#(struct:physical 34 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj34 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj34.color (Color "white")) (setv obj34.group 34) (setv obj34_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj34.png")) (image-bindings.append [obj34 obj34_image]) (user_shapes.append obj34) obj34))) (setv obj34 (make_obj34 0 0 False)) (setv (. obj34 mass) 10) (obj34.hit [31467.295890952824 -28546.411739115985] obj34.position) (defn make_obj35 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj35" "\n" "#(struct:physical 35 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj35 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj35.color (Color "white")) (setv obj35.group 35) (setv obj35_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj35.png")) (image-bindings.append [obj35 obj35_image]) (user_shapes.append obj35) obj35))) (setv obj35 (make_obj35 0 0 False)) (setv (. obj35 mass) 10) (obj35.hit [-27401.128131764624 -41937.15705138833] obj35.position) (defn make_obj37 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj37" "\n" "#(struct:physical 37 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj37 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj37.color (Color "white")) (setv obj37.group 37) (setv obj37_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj37.png")) (image-bindings.append [obj37 obj37_image]) (user_shapes.append obj37) obj37))) (setv obj37 (make_obj37 0 0 False)) (setv (. obj37 mass) 10) (obj37.hit [46840.37299426217 42215.363630278895] obj37.position) (defn make_obj38 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj38" "\n" "#(struct:physical 38 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj38 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj38.color (Color "white")) (setv obj38.group 38) (setv obj38_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj38.png")) (image-bindings.append [obj38 obj38_image]) (user_shapes.append obj38) obj38))) (setv obj38 (make_obj38 0 0 False)) (setv (. obj38 mass) 10) (obj38.hit [6950.228741776111 44397.68056262229] obj38.position) (defn make_obj39 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj39" "\n" "#(struct:physical 39 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj39 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj39.color (Color "white")) (setv obj39.group 39) (setv obj39_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj39.png")) (image-bindings.append [obj39 obj39_image]) (user_shapes.append obj39) obj39))) (setv obj39 (make_obj39 0 0 False)) (setv (. obj39 mass) 10) (obj39.hit [26735.006054137193 -1168.4781506293075] obj39.position) (defn make_obj40 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj40" "\n" "#(struct:physical 40 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj40 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj40.color (Color "white")) (setv obj40.group 40) (setv obj40_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj40.png")) (image-bindings.append [obj40 obj40_image]) (user_shapes.append obj40) obj40))) (setv obj40 (make_obj40 0 0 False)) (setv (. obj40 mass) 10) (obj40.hit [46654.03429047186 46797.61825453132] obj40.position) (defn make_obj42 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj42" "\n" "#(struct:physical 42 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj42 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj42.color (Color "white")) (setv obj42.group 42) (setv obj42_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj42.png")) (image-bindings.append [obj42 obj42_image]) (user_shapes.append obj42) obj42))) (setv obj42 (make_obj42 0 0 False)) (setv (. obj42 mass) 10) (obj42.hit [-46898.85334925761 21380.94351329755] obj42.position) (defn make_obj43 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj43" "\n" "#(struct:physical 43 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj43 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj43.color (Color "white")) (setv obj43.group 43) (setv obj43_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj43.png")) (image-bindings.append [obj43 obj43_image]) (user_shapes.append obj43) obj43))) (setv obj43 (make_obj43 0 0 False)) (setv (. obj43 mass) 10) (obj43.hit [20102.36947827341 -6890.163927607726] obj43.position) (defn make_obj44 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj44" "\n" "#(struct:physical 44 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj44 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj44.color (Color "white")) (setv obj44.group 44) (setv obj44_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj44.png")) (image-bindings.append [obj44 obj44_image]) (user_shapes.append obj44) obj44))) (setv obj44 (make_obj44 0 0 False)) (setv (. obj44 mass) 10) (obj44.hit [-34976.51006912675 -22628.081102539054] obj44.position) (defn make_obj45 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj45" "\n" "#(struct:physical 45 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj45 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj45.color (Color "white")) (setv obj45.group 45) (setv obj45_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj45.png")) (image-bindings.append [obj45 obj45_image]) (user_shapes.append obj45) obj45))) (setv obj45 (make_obj45 0 0 False)) (setv (. obj45 mass) 10) (obj45.hit [-44317.59205601624 5429.15552604579] obj45.position) (deactivate f))))) (setv space (. obj25 body space)) (setv ch (space.add-wildcard-collision-handler obj25.collision_type)) (setv ch.post_solve on_collide_25)) (do (setv (. obj2 mass) 10)) (motor obj2 0) (do (setv obj2.gravity (, 0 -100))) (do (defn on_click_2 [keys] (do (global obj2) (setv f obj2) (if (or (not f) (not f.body)) (return False)) (setv p f.body.position) (if (and (mouse-clicked) (obj2.inside (mouse-point)) (. obj2 active)) (do (do (defn make_obj4 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj4" "\n" "#(struct:physical 4 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj4 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj4.color (Color "white")) (setv obj4.group 4) (setv obj4_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj4.png")) (image-bindings.append [obj4 obj4_image]) (user_shapes.append obj4) obj4))) (setv obj4 (make_obj4 0 0 False)) (setv (. obj4 mass) 10) (obj4.hit [47373.16496987322 -20665.113790506417] obj4.position) (defn make_obj5 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj5" "\n" "#(struct:physical 5 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj5 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj5.color (Color "white")) (setv obj5.group 5) (setv obj5_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj5.png")) (image-bindings.append [obj5 obj5_image]) (user_shapes.append obj5) obj5))) (setv obj5 (make_obj5 0 0 False)) (setv (. obj5 mass) 10) (obj5.hit [19823.802384396768 -12856.43167191599] obj5.position) (defn make_obj6 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj6" "\n" "#(struct:physical 6 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj6 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj6.color (Color "white")) (setv obj6.group 6) (setv obj6_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj6.png")) (image-bindings.append [obj6 obj6_image]) (user_shapes.append obj6) obj6))) (setv obj6 (make_obj6 0 0 False)) (setv (. obj6 mass) 10) (obj6.hit [40523.00612181083 3744.072508711157] obj6.position) (defn make_obj7 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj7" "\n" "#(struct:physical 7 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj7 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj7.color (Color "white")) (setv obj7.group 7) (setv obj7_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj7.png")) (image-bindings.append [obj7 obj7_image]) (user_shapes.append obj7) obj7))) (setv obj7 (make_obj7 0 0 False)) (setv (. obj7 mass) 10) (obj7.hit [-15569.97761096697 45210.848400335875] obj7.position) (defn make_obj9 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj9" "\n" "#(struct:physical 9 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj9 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj9.color (Color "white")) (setv obj9.group 9) (setv obj9_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj9.png")) (image-bindings.append [obj9 obj9_image]) (user_shapes.append obj9) obj9))) (setv obj9 (make_obj9 0 0 False)) (setv (. obj9 mass) 10) (obj9.hit [7468.374668020282 29758.006983824424] obj9.position) (defn make_obj10 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj10" "\n" "#(struct:physical 10 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj10 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj10.color (Color "white")) (setv obj10.group 10) (setv obj10_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj10.png")) (image-bindings.append [obj10 obj10_image]) (user_shapes.append obj10) obj10))) (setv obj10 (make_obj10 0 0 False)) (setv (. obj10 mass) 10) (obj10.hit [13827.980676717125 24535.563635499508] obj10.position) (defn make_obj11 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj11" "\n" "#(struct:physical 11 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj11 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj11.color (Color "white")) (setv obj11.group 11) (setv obj11_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj11.png")) (image-bindings.append [obj11 obj11_image]) (user_shapes.append obj11) obj11))) (setv obj11 (make_obj11 0 0 False)) (setv (. obj11 mass) 10) (obj11.hit [28831.132477353225 -10561.454435061321] obj11.position) (defn make_obj12 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj12" "\n" "#(struct:physical 12 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj12 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj12.color (Color "white")) (setv obj12.group 12) (setv obj12_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj12.png")) (image-bindings.append [obj12 obj12_image]) (user_shapes.append obj12) obj12))) (setv obj12 (make_obj12 0 0 False)) (setv (. obj12 mass) 10) (obj12.hit [32125.356346851724 -33656.90526567313] obj12.position) (defn make_obj14 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj14" "\n" "#(struct:physical 14 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj14 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj14.color (Color "white")) (setv obj14.group 14) (setv obj14_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj14.png")) (image-bindings.append [obj14 obj14_image]) (user_shapes.append obj14) obj14))) (setv obj14 (make_obj14 0 0 False)) (setv (. obj14 mass) 10) (obj14.hit [-25698.69583131017 -239.37333603148727] obj14.position) (defn make_obj15 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj15" "\n" "#(struct:physical 15 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj15 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj15.color (Color "white")) (setv obj15.group 15) (setv obj15_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj15.png")) (image-bindings.append [obj15 obj15_image]) (user_shapes.append obj15) obj15))) (setv obj15 (make_obj15 0 0 False)) (setv (. obj15 mass) 10) (obj15.hit [-7650.75010511931 -24489.711852245975] obj15.position) (defn make_obj16 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj16" "\n" "#(struct:physical 16 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj16 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj16.color (Color "white")) (setv obj16.group 16) (setv obj16_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj16.png")) (image-bindings.append [obj16 obj16_image]) (user_shapes.append obj16) obj16))) (setv obj16 (make_obj16 0 0 False)) (setv (. obj16 mass) 10) (obj16.hit [-33137.12035131665 14250.65467230422] obj16.position) (defn make_obj17 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj17" "\n" "#(struct:physical 17 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj17 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj17.color (Color "white")) (setv obj17.group 17) (setv obj17_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj17.png")) (image-bindings.append [obj17 obj17_image]) (user_shapes.append obj17) obj17))) (setv obj17 (make_obj17 0 0 False)) (setv (. obj17 mass) 10) (obj17.hit [39384.21497398912 35288.74957469756] obj17.position) (defn make_obj19 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj19" "\n" "#(struct:physical 19 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj19 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj19.color (Color "white")) (setv obj19.group 19) (setv obj19_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj19.png")) (image-bindings.append [obj19 obj19_image]) (user_shapes.append obj19) obj19))) (setv obj19 (make_obj19 0 0 False)) (setv (. obj19 mass) 10) (obj19.hit [41165.38284867995 40533.200705169176] obj19.position) (defn make_obj20 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj20" "\n" "#(struct:physical 20 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj20 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj20.color (Color "white")) (setv obj20.group 20) (setv obj20_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj20.png")) (image-bindings.append [obj20 obj20_image]) (user_shapes.append obj20) obj20))) (setv obj20 (make_obj20 0 0 False)) (setv (. obj20 mass) 10) (obj20.hit [7054.211447778158 30272.736865265586] obj20.position) (defn make_obj21 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj21" "\n" "#(struct:physical 21 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj21 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj21.color (Color "white")) (setv obj21.group 21) (setv obj21_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj21.png")) (image-bindings.append [obj21 obj21_image]) (user_shapes.append obj21) obj21))) (setv obj21 (make_obj21 0 0 False)) (setv (. obj21 mass) 10) (obj21.hit [40636.34040121893 3106.5961220702156] obj21.position) (defn make_obj22 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj22" "\n" "#(struct:physical 22 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj22 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj22.color (Color "white")) (setv obj22.group 22) (setv obj22_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj22.png")) (image-bindings.append [obj22 obj22_image]) (user_shapes.append obj22) obj22))) (setv obj22 (make_obj22 0 0 False)) (setv (. obj22 mass) 10) (obj22.hit [-8867.336470728267 25054.692735750257] obj22.position) (deactivate f)) (return True))))) (add-observer on_click_2)) (do (defn on_collide_2 [arbiter space data] (do (setv f obj2) (setv p f.body.position) (setv friction (. arbiter friction)) (setv restitution (. arbiter restitution)) (setv total_impulse (. arbiter total_impulse)) (setv energy_loss (. arbiter total_ke)) (if (and (> friction 0) (> energy-loss 50000000)) (do (defn make_obj4 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj4" "\n" "#(struct:physical 4 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj4 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj4.color (Color "white")) (setv obj4.group 4) (setv obj4_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj4.png")) (image-bindings.append [obj4 obj4_image]) (user_shapes.append obj4) obj4))) (setv obj4 (make_obj4 0 0 False)) (setv (. obj4 mass) 10) (obj4.hit [47373.16496987322 -20665.113790506417] obj4.position) (defn make_obj5 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj5" "\n" "#(struct:physical 5 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj5 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj5.color (Color "white")) (setv obj5.group 5) (setv obj5_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj5.png")) (image-bindings.append [obj5 obj5_image]) (user_shapes.append obj5) obj5))) (setv obj5 (make_obj5 0 0 False)) (setv (. obj5 mass) 10) (obj5.hit [19823.802384396768 -12856.43167191599] obj5.position) (defn make_obj6 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj6" "\n" "#(struct:physical 6 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj6 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj6.color (Color "white")) (setv obj6.group 6) (setv obj6_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj6.png")) (image-bindings.append [obj6 obj6_image]) (user_shapes.append obj6) obj6))) (setv obj6 (make_obj6 0 0 False)) (setv (. obj6 mass) 10) (obj6.hit [40523.00612181083 3744.072508711157] obj6.position) (defn make_obj7 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj7" "\n" "#(struct:physical 7 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj7 (box [(+ (int (- (+ p.x 11/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj7.color (Color "white")) (setv obj7.group 7) (setv obj7_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj7.png")) (image-bindings.append [obj7 obj7_image]) (user_shapes.append obj7) obj7))) (setv obj7 (make_obj7 0 0 False)) (setv (. obj7 mass) 10) (obj7.hit [-15569.97761096697 45210.848400335875] obj7.position) (defn make_obj9 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj9" "\n" "#(struct:physical 9 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj9 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj9.color (Color "white")) (setv obj9.group 9) (setv obj9_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj9.png")) (image-bindings.append [obj9 obj9_image]) (user_shapes.append obj9) obj9))) (setv obj9 (make_obj9 0 0 False)) (setv (. obj9 mass) 10) (obj9.hit [7468.374668020282 29758.006983824424] obj9.position) (defn make_obj10 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj10" "\n" "#(struct:physical 10 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj10 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj10.color (Color "white")) (setv obj10.group 10) (setv obj10_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj10.png")) (image-bindings.append [obj10 obj10_image]) (user_shapes.append obj10) obj10))) (setv obj10 (make_obj10 0 0 False)) (setv (. obj10 mass) 10) (obj10.hit [13827.980676717125 24535.563635499508] obj10.position) (defn make_obj11 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj11" "\n" "#(struct:physical 11 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj11 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj11.color (Color "white")) (setv obj11.group 11) (setv obj11_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj11.png")) (image-bindings.append [obj11 obj11_image]) (user_shapes.append obj11) obj11))) (setv obj11 (make_obj11 0 0 False)) (setv (. obj11 mass) 10) (obj11.hit [28831.132477353225 -10561.454435061321] obj11.position) (defn make_obj12 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj12" "\n" "#(struct:physical 12 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj12 (box [(+ (int (- (+ p.x 33/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj12.color (Color "white")) (setv obj12.group 12) (setv obj12_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj12.png")) (image-bindings.append [obj12 obj12_image]) (user_shapes.append obj12) obj12))) (setv obj12 (make_obj12 0 0 False)) (setv (. obj12 mass) 10) (obj12.hit [32125.356346851724 -33656.90526567313] obj12.position) (defn make_obj14 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj14" "\n" "#(struct:physical 14 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj14 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj14.color (Color "white")) (setv obj14.group 14) (setv obj14_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj14.png")) (image-bindings.append [obj14 obj14_image]) (user_shapes.append obj14) obj14))) (setv obj14 (make_obj14 0 0 False)) (setv (. obj14 mass) 10) (obj14.hit [-25698.69583131017 -239.37333603148727] obj14.position) (defn make_obj15 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj15" "\n" "#(struct:physical 15 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj15 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj15.color (Color "white")) (setv obj15.group 15) (setv obj15_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj15.png")) (image-bindings.append [obj15 obj15_image]) (user_shapes.append obj15) obj15))) (setv obj15 (make_obj15 0 0 False)) (setv (. obj15 mass) 10) (obj15.hit [-7650.75010511931 -24489.711852245975] obj15.position) (defn make_obj16 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj16" "\n" "#(struct:physical 16 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj16 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj16.color (Color "white")) (setv obj16.group 16) (setv obj16_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj16.png")) (image-bindings.append [obj16 obj16_image]) (user_shapes.append obj16) obj16))) (setv obj16 (make_obj16 0 0 False)) (setv (. obj16 mass) 10) (obj16.hit [-33137.12035131665 14250.65467230422] obj16.position) (defn make_obj17 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj17" "\n" "#(struct:physical 17 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj17 (box [(+ (int (- (+ p.x 55/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj17.color (Color "white")) (setv obj17.group 17) (setv obj17_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj17.png")) (image-bindings.append [obj17 obj17_image]) (user_shapes.append obj17) obj17))) (setv obj17 (make_obj17 0 0 False)) (setv (. obj17 mass) 10) (obj17.hit [39384.21497398912 35288.74957469756] obj17.position) (defn make_obj19 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj19" "\n" "#(struct:physical 19 11/2 15/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj19 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 15/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj19.color (Color "white")) (setv obj19.group 19) (setv obj19_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj19.png")) (image-bindings.append [obj19 obj19_image]) (user_shapes.append obj19) obj19))) (setv obj19 (make_obj19 0 0 False)) (setv (. obj19 mass) 10) (obj19.hit [41165.38284867995 40533.200705169176] obj19.position) (defn make_obj20 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj20" "\n" "#(struct:physical 20 11/2 45/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj20 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 45/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj20.color (Color "white")) (setv obj20.group 20) (setv obj20_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj20.png")) (image-bindings.append [obj20 obj20_image]) (user_shapes.append obj20) obj20))) (setv obj20 (make_obj20 0 0 False)) (setv (. obj20 mass) 10) (obj20.hit [7054.211447778158 30272.736865265586] obj20.position) (defn make_obj21 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj21" "\n" "#(struct:physical 21 11/2 75/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj21 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 75/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj21.color (Color "white")) (setv obj21.group 21) (setv obj21_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj21.png")) (image-bindings.append [obj21 obj21_image]) (user_shapes.append obj21) obj21))) (setv obj21 (make_obj21 0 0 False)) (setv (. obj21 mass) 10) (obj21.hit [40636.34040121893 3106.5961220702156] obj21.position) (defn make_obj22 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj22" "\n" "#(struct:physical 22 11/2 105/2 (#<procedure:...ery/compiler.rkt:305:21> #<procedure:...ery/compiler.rkt:375:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj22 (box [(+ (int (- (+ p.x 77/2 -22) 11/2)) (int off-x)) (+ (int (- (+ p.y 105/2 -30) 15/2)) (int off-y))] 11 15)) (setv obj22.color (Color "white")) (setv obj22.group 22) (setv obj22_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj22.png")) (image-bindings.append [obj22 obj22_image]) (user_shapes.append obj22) obj22))) (setv obj22 (make_obj22 0 0 False)) (setv (. obj22 mass) 10) (obj22.hit [-8867.336470728267 25054.692735750257] obj22.position) (deactivate f))))) (setv space (. obj2 body space)) (setv ch (space.add-wildcard-collision-handler obj2.collision_type)) (setv ch.post_solve on_collide_2)) (defn image-for [s] (do (global image-bindings) (for (b image-bindings) (if (= (. b [0]) s) (return (. b [1])))) (return False))) (defn draw-images [cosmetic] (do (defn f [keys] (do (global user-shapes) (for (s user-shapes) (if (not (image-for s)) (continue)) (if (not (= cosmetic (. s _cosmetic))) (continue)) (if (not (. s active)) (continue)) (if (. s body) (setv p (Vec2d (. s body position x) (. s body position y))) (setv p (Vec2d (. s _x) (. s _y)))) (setv angle 0) (if (. s body) (setv angle (. s body angle))) (setv angle_degrees (math.degrees angle)) (setv rotated_logo_img (pygame.transform.rotate (image-for s) (* -1 angle-degrees))) (setv offset (/ (Vec2d (rotated_logo_img.get_size)) 2)) (setv p (- p offset)) (setv screen (pygame.display.get-surface)) (screen.blit rotated_logo_img p)))) (return f))) (defn draw_pivot_lines [keys] (do (global pivots) (for (p pivots) (setv start (. p body position)) (for (j (. p shape)) (if (not p.active) (continue)) (setv other (. j a)) (setv end (. other position)) (setv screen (pygame.display.get_surface)) (pygame.draw.line screen (Color "black") start end))))) (defn draw_connection_lines [keys] (do (for (c connected_shapes) (setv start (. c [0] body position)) (setv end (. c [1] body position)) (if (or (not (. c [0] active)) (not (. c [1] active))) (do (deactivate (. c [2])) (continue))) (setv screen (pygame.display.get_surface)) (pygame.draw.line screen (Color "black") start end)))) (defn test-ball [keys] (do (if (in constants.K_b keys) (do (do (setv obj146 (ball [(+ (int 300) (int off-x)) (+ (int 300)) (int off-y)] 10)) (setv obj146.color (Color "white")) (setv obj146.group 146) (setv obj146_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj146.png")) (image-bindings.append [obj146 obj146_image]) (user_shapes.append obj146) obj146))))) (add-observer (draw-images True)) (add-observer draw_pivot_lines) (add-observer draw_connection_lines) (add-observer (draw-images False)) (run)