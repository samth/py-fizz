(import math) (import pymunk) (import [pyphysicssandbox [*]]) (import pygame) (import [pyphysicssandbox [Vec2d]]) (setv w 505) (setv h 373) (setv user_shapes []) (setv image_bindings []) (setv pivots []) (setv connected_shapes []) (window "Most Awesome Thing Ever" 505 373) (defn make_obj38 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj38" "\n" "#(struct:physical 38 505/2 368 () #<box-collider> #(struct:object:image% ...) #f)"))) (do (setv obj38 (static_box [(+ (int (- 505/2 505/2)) (int off-x)) (+ (int (- 368 5)) (int off-y))] 505 10)) (setv obj38.color (Color "white")) (setv obj38.group 38) (setv obj38_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj38.png")) (image-bindings.append [obj38 obj38_image]) (user_shapes.append obj38) obj38))) (setv obj38 (make_obj38 0 0 False)) (defn make_obj40 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj40" "\n" "#(struct:physical 40 500 353/2 () #<box-collider> #(struct:object:image% ...) #f)"))) (do (setv obj40 (static_box [(+ (int (- 500 5)) (int off-x)) (+ (int (- 373/2 353/2)) (int off-y))] 10 353)) (setv obj40.color (Color "white")) (setv obj40.group 40) (setv obj40_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj40.png")) (image-bindings.append [obj40 obj40_image]) (user_shapes.append obj40) obj40))) (setv obj40 (make_obj40 0 0 False)) (defn make_obj36 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj36" "\n" "#(struct:cosmetic 36 485/2 353/2 () #(struct:object:image% ...))"))) (do (setv obj36 (cosmetic_ball [(+ (int 505/2) (int off-x)) (+ (int 373/2)) (int off-y)] 485/2)) (setv obj36.color (Color "white")) (setv obj36.group 36) (setv obj36_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj36.png")) (image-bindings.append [obj36 obj36_image]) (user_shapes.append obj36) obj36))) (setv obj36 (make_obj36 0 0 False)) (defn make_obj3 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj3" "\n" "#(struct:physical 3 20 60 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:445:21>) #<circle-collider> #(struct:object:image% ...) #t)"))) (do (setv obj3 (ball [(+ (int 505/2) (int off-x)) (+ (int 413/2)) (int off-y)] 20)) (setv obj3.color (Color "white")) (setv obj3.group 3) (setv obj3_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj3.png")) (image-bindings.append [obj3 obj3_image]) (user_shapes.append obj3) obj3))) (setv obj3 (make_obj3 0 0 False)) (defn make_obj2 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj2" "\n" "#(struct:physical 2 20 20 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:445:21>) #<circle-collider> #(struct:object:image% ...) #t)"))) (do (setv obj2 (ball [(+ (int 505/2) (int off-x)) (+ (int 333/2)) (int off-y)] 20)) (setv obj2.color (Color "white")) (setv obj2.group 2) (setv obj2_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj2.png")) (image-bindings.append [obj2 obj2_image]) (user_shapes.append obj2) obj2))) (setv obj2 (make_obj2 0 0 False)) (defn make_obj7 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj7" "\n" "#(struct:physical 7 20 60 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:445:21>) #<circle-collider> #(struct:object:image% ...) #t)"))) (do (setv obj7 (ball [(+ (int 505/2) (int off-x)) (+ (int 413/2)) (int off-y)] 20)) (setv obj7.color (Color "white")) (setv obj7.group 7) (setv obj7_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj7.png")) (image-bindings.append [obj7 obj7_image]) (user_shapes.append obj7) obj7))) (setv obj7 (make_obj7 0 0 False)) (defn make_obj6 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj6" "\n" "#(struct:physical 6 20 20 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:445:21>) #<circle-collider> #(struct:object:image% ...) #t)"))) (do (setv obj6 (ball [(+ (int 505/2) (int off-x)) (+ (int 333/2)) (int off-y)] 20)) (setv obj6.color (Color "white")) (setv obj6.group 6) (setv obj6_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj6.png")) (image-bindings.append [obj6 obj6_image]) (user_shapes.append obj6) obj6))) (setv obj6 (make_obj6 0 0 False)) (defn make_obj11 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj11" "\n" "#(struct:physical 11 20 60 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:445:21>) #<circle-collider> #(struct:object:image% ...) #t)"))) (do (setv obj11 (ball [(+ (int 505/2) (int off-x)) (+ (int 413/2)) (int off-y)] 20)) (setv obj11.color (Color "white")) (setv obj11.group 11) (setv obj11_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj11.png")) (image-bindings.append [obj11 obj11_image]) (user_shapes.append obj11) obj11))) (setv obj11 (make_obj11 0 0 False)) (defn make_obj10 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj10" "\n" "#(struct:physical 10 20 20 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:445:21>) #<circle-collider> #(struct:object:image% ...) #t)"))) (do (setv obj10 (ball [(+ (int 505/2) (int off-x)) (+ (int 333/2)) (int off-y)] 20)) (setv obj10.color (Color "white")) (setv obj10.group 10) (setv obj10_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj10.png")) (image-bindings.append [obj10 obj10_image]) (user_shapes.append obj10) obj10))) (setv obj10 (make_obj10 0 0 False)) (defn make_obj15 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj15" "\n" "#(struct:physical 15 20 60 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:445:21>) #<circle-collider> #(struct:object:image% ...) #t)"))) (do (setv obj15 (ball [(+ (int 505/2) (int off-x)) (+ (int 413/2)) (int off-y)] 20)) (setv obj15.color (Color "white")) (setv obj15.group 15) (setv obj15_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj15.png")) (image-bindings.append [obj15 obj15_image]) (user_shapes.append obj15) obj15))) (setv obj15 (make_obj15 0 0 False)) (defn make_obj14 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj14" "\n" "#(struct:physical 14 20 20 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:445:21>) #<circle-collider> #(struct:object:image% ...) #t)"))) (do (setv obj14 (ball [(+ (int 505/2) (int off-x)) (+ (int 333/2)) (int off-y)] 20)) (setv obj14.color (Color "white")) (setv obj14.group 14) (setv obj14_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj14.png")) (image-bindings.append [obj14 obj14_image]) (user_shapes.append obj14) obj14))) (setv obj14 (make_obj14 0 0 False)) (defn make_obj30 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj30" "\n" "#(struct:cosmetic 30 230 43 () #(struct:object:image% ...))"))) (do (setv obj30 (cosmetic_ball [(+ (int 635/2) (int off-x)) (+ (int 433/2)) (int off-y)] 100)) (setv obj30.color (Color "white")) (setv obj30.group 30) (setv obj30_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj30.png")) (image-bindings.append [obj30 obj30_image]) (user_shapes.append obj30) obj30))) (setv obj30 (make_obj30 0 0 False)) (defn make_obj20 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj20" "\n" "#(struct:physical 20 110 20 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:363:21> #<procedure:...ery/compiler.rkt:385:21>) #<circle-collider> #(struct:object:image% ...) #t)"))) (do (setv obj20 (ball [(+ (int 395/2) (int off-x)) (+ (int 479/2)) (int off-y)] 20)) (setv obj20.color (Color "white")) (setv obj20.group 20) (setv obj20_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj20.png")) (image-bindings.append [obj20 obj20_image]) (user_shapes.append obj20) obj20))) (setv obj20 (make_obj20 0 0 False)) (defn make_obj27 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj27" "\n" "#(struct:cosmetic 27 175/2 20 () #(struct:object:image% ...))"))) (do (setv obj27 (cosmetic_ball [(+ (int 175) (int off-x)) (+ (int 479/2)) (int off-y)] 5/2)) (setv obj27.color (Color "white")) (setv obj27.group 27) (setv obj27_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj27.png")) (image-bindings.append [obj27 obj27_image]) (user_shapes.append obj27) obj27))) (setv obj27 (make_obj27 0 0 False)) (defn make_obj19 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj19" "\n" "#(struct:physical 19 65 20 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:363:21> #<procedure:...ery/compiler.rkt:363:21> #<procedure:...ery/compiler.rkt:385:21>) #<circle-collider> #(struct:object:image% ...) #t)"))) (do (setv obj19 (ball [(+ (int 305/2) (int off-x)) (+ (int 479/2)) (int off-y)] 20)) (setv obj19.color (Color "white")) (setv obj19.group 19) (setv obj19_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj19.png")) (image-bindings.append [obj19 obj19_image]) (user_shapes.append obj19) obj19))) (setv obj19 (make_obj19 0 0 False)) (defn make_obj26 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj26" "\n" "#(struct:cosmetic 26 85/2 20 () #(struct:object:image% ...))"))) (do (setv obj26 (cosmetic_ball [(+ (int 130) (int off-x)) (+ (int 479/2)) (int off-y)] 5/2)) (setv obj26.color (Color "white")) (setv obj26.group 26) (setv obj26_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj26.png")) (image-bindings.append [obj26 obj26_image]) (user_shapes.append obj26) obj26))) (setv obj26 (make_obj26 0 0 False)) (defn make_obj18 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj18" "\n" "#(struct:physical 18 20 20 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:363:21> #<procedure:...ery/compiler.rkt:363:21> #<procedure:...ery/compiler.rkt:385:21>) #<circle-collider> #(struct:object:image% ...) #t)"))) (do (setv obj18 (ball [(+ (int 215/2) (int off-x)) (+ (int 479/2)) (int off-y)] 20)) (setv obj18.color (Color "white")) (setv obj18.group 18) (setv obj18_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj18.png")) (image-bindings.append [obj18 obj18_image]) (user_shapes.append obj18) obj18))) (setv obj18 (make_obj18 0 0 False)) (defn make_obj25 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj25" "\n" "#(struct:cosmetic 25 65 87/2 () #(struct:object:image% ...))"))) (do (setv obj25 (cosmetic_ball [(+ (int 305/2) (int off-x)) (+ (int 217)) (int off-y)] 5/2)) (setv obj25.color (Color "white")) (setv obj25.group 25) (setv obj25_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj25.png")) (image-bindings.append [obj25 obj25_image]) (user_shapes.append obj25) obj25))) (setv obj25 (make_obj25 0 0 False)) (defn make_obj24 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj24" "\n" "#(struct:physical 24 65 41/2 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:374:21> #<procedure:...ery/compiler.rkt:385:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj24 (box [(+ (int (- 305/2 41/2)) (int off-x)) (+ (int (- 194 41/2)) (int off-y))] 41 41)) (setv obj24.color (Color "white")) (setv obj24.group 24) (setv obj24_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj24.png")) (image-bindings.append [obj24 obj24_image]) (user_shapes.append obj24) obj24))) (setv obj24 (make_obj24 0 0 False)) (defn make_obj13 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj13" "\n" "#(struct:physical 13 154 30 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:385:21> #<procedure:...ery/compiler.rkt:419:21> #<procedure:...ery/compiler.rkt:496:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj13 (box [(+ (int (- 637/2 22)) (int off-x)) (+ (int (- 287/2 30)) (int off-y))] 44 60)) (setv obj13.color (Color "white")) (setv obj13.group 13) (setv obj13_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj13.png")) (image-bindings.append [obj13 obj13_image]) (user_shapes.append obj13) obj13))) (setv obj13 (make_obj13 0 0 False)) (defn make_obj9 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj9" "\n" "#(struct:physical 9 110 30 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:385:21> #<procedure:...ery/compiler.rkt:419:21> #<procedure:...ery/compiler.rkt:496:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj9 (box [(+ (int (- 549/2 22)) (int off-x)) (+ (int (- 287/2 30)) (int off-y))] 44 60)) (setv obj9.color (Color "white")) (setv obj9.group 9) (setv obj9_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj9.png")) (image-bindings.append [obj9 obj9_image]) (user_shapes.append obj9) obj9))) (setv obj9 (make_obj9 0 0 False)) (defn make_obj5 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj5" "\n" "#(struct:physical 5 66 30 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:385:21> #<procedure:...ery/compiler.rkt:419:21> #<procedure:...ery/compiler.rkt:496:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj5 (box [(+ (int (- 461/2 22)) (int off-x)) (+ (int (- 287/2 30)) (int off-y))] 44 60)) (setv obj5.color (Color "white")) (setv obj5.group 5) (setv obj5_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj5.png")) (image-bindings.append [obj5 obj5_image]) (user_shapes.append obj5) obj5))) (setv obj5 (make_obj5 0 0 False)) (defn make_obj1 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj1" "\n" "#(struct:physical 1 22 30 (#<procedure:...ery/compiler.rkt:306:21> #<procedure:...ery/compiler.rkt:385:21> #<procedure:...ery/compiler.rkt:419:21> #<procedure:...ery/compiler.rkt:496:21>) #<box-collider> #(struct:object:image% ...) #t)"))) (do (setv obj1 (box [(+ (int (- 373/2 22)) (int off-x)) (+ (int (- 287/2 30)) (int off-y))] 44 60)) (setv obj1.color (Color "white")) (setv obj1.group 1) (setv obj1_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj1.png")) (image-bindings.append [obj1 obj1_image]) (user_shapes.append obj1) obj1))) (setv obj1 (make_obj1 0 0 False)) (defn make_obj40 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj40" "\n" "#(struct:physical 40 5 353/2 () #<box-collider> #(struct:object:image% ...) #f)"))) (do (setv obj40 (static_box [(+ (int (- 5 5)) (int off-x)) (+ (int (- 373/2 353/2)) (int off-y))] 10 353)) (setv obj40.color (Color "white")) (setv obj40.group 40) (setv obj40_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj40.png")) (image-bindings.append [obj40 obj40_image]) (user_shapes.append obj40) obj40))) (setv obj40 (make_obj40 0 0 False)) (defn make_obj38 [off-x off-y debug] (do (if debug (print (+ "Making " "make_obj38" "\n" "#(struct:physical 38 505/2 5 () #<box-collider> #(struct:object:image% ...) #f)"))) (do (setv obj38 (static_box [(+ (int (- 505/2 505/2)) (int off-x)) (+ (int (- 5 5)) (int off-y))] 505 10)) (setv obj38.color (Color "white")) (setv obj38.group 38) (setv obj38_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj38.png")) (image-bindings.append [obj38 obj38_image]) (user_shapes.append obj38) obj38))) (setv obj38 (make_obj38 0 0 False)) (do (setv (. obj3 mass) 10)) (do (if (in "obj3" (vars)) (deactivate obj3))) (do (setv (. obj2 mass) 10)) (do (if (in "obj2" (vars)) (deactivate obj2))) (do (setv (. obj7 mass) 10)) (do (if (in "obj7" (vars)) (deactivate obj7))) (do (setv (. obj6 mass) 10)) (do (if (in "obj6" (vars)) (deactivate obj6))) (do (setv (. obj11 mass) 10)) (do (if (in "obj11" (vars)) (deactivate obj11))) (do (setv (. obj10 mass) 10)) (do (if (in "obj10" (vars)) (deactivate obj10))) (do (setv (. obj15 mass) 10)) (do (if (in "obj15" (vars)) (deactivate obj15))) (do (setv (. obj14 mass) 10)) (do (if (in "obj14" (vars)) (deactivate obj14))) (do (setv (. obj20 mass) 10)) (do (pin obj20.body.position obj20 obj24.body.position obj24) (connected_shapes.append [obj20 obj24])) (motor obj20 5) (do (setv (. obj19 mass) 10)) (do (pin obj19.body.position obj19 obj20.body.position obj20) (connected_shapes.append [obj19 obj20])) (do (pin obj19.body.position obj19 obj24.body.position obj24) (connected_shapes.append [obj19 obj24])) (motor obj19 5) (do (setv (. obj18 mass) 10)) (do (pin obj18.body.position obj18 obj19.body.position obj19) (connected_shapes.append [obj18 obj19])) (do (pin obj18.body.position obj18 obj24.body.position obj24) (connected_shapes.append [obj18 obj24])) (motor obj18 5) (do (setv (. obj24 mass) 10)) (do (obj24.hit [0 0] obj24.position)) (motor obj24 0) (do (setv (. obj13 mass) 10)) (motor obj13 0) (do (setv obj13.gravity (, 0 -100))) (do (defn on_click_13 [keys] (do (global obj13) (setv f obj13) (if (or (not f) (not f.body)) (return False)) (setv p f.body.position) (if (and (mouse-clicked) (obj13.inside (mouse-point)) (. obj13 active)) (do (do (do (try (do (deactivate f) (make_obj14 (+ (. p [0]) (* -1 (/ w 2))) (+ (. p [1]) (* -1 (/ h 2))) False)) (except [e] (print e)))) (do (try (do (deactivate f) (make_obj15 (+ (. p [0]) (* -1 (/ w 2))) (+ (. p [1]) (* -1 (/ h 2))) False)) (except [e] (print e))))) (return True))))) (add-observer on_click_13)) (do (setv (. obj9 mass) 10)) (motor obj9 0) (do (setv obj9.gravity (, 0 -100))) (do (defn on_click_9 [keys] (do (global obj9) (setv f obj9) (if (or (not f) (not f.body)) (return False)) (setv p f.body.position) (if (and (mouse-clicked) (obj9.inside (mouse-point)) (. obj9 active)) (do (do (do (try (do (deactivate f) (make_obj10 (+ (. p [0]) (* -1 (/ w 2))) (+ (. p [1]) (* -1 (/ h 2))) False)) (except [e] (print e)))) (do (try (do (deactivate f) (make_obj11 (+ (. p [0]) (* -1 (/ w 2))) (+ (. p [1]) (* -1 (/ h 2))) False)) (except [e] (print e))))) (return True))))) (add-observer on_click_9)) (do (setv (. obj5 mass) 10)) (motor obj5 0) (do (setv obj5.gravity (, 0 -100))) (do (defn on_click_5 [keys] (do (global obj5) (setv f obj5) (if (or (not f) (not f.body)) (return False)) (setv p f.body.position) (if (and (mouse-clicked) (obj5.inside (mouse-point)) (. obj5 active)) (do (do (do (try (do (deactivate f) (make_obj6 (+ (. p [0]) (* -1 (/ w 2))) (+ (. p [1]) (* -1 (/ h 2))) False)) (except [e] (print e)))) (do (try (do (deactivate f) (make_obj7 (+ (. p [0]) (* -1 (/ w 2))) (+ (. p [1]) (* -1 (/ h 2))) False)) (except [e] (print e))))) (return True))))) (add-observer on_click_5)) (do (setv (. obj1 mass) 10)) (motor obj1 0) (do (setv obj1.gravity (, 0 -100))) (do (defn on_click_1 [keys] (do (global obj1) (setv f obj1) (if (or (not f) (not f.body)) (return False)) (setv p f.body.position) (if (and (mouse-clicked) (obj1.inside (mouse-point)) (. obj1 active)) (do (do (do (try (do (deactivate f) (make_obj2 (+ (. p [0]) (* -1 (/ w 2))) (+ (. p [1]) (* -1 (/ h 2))) False)) (except [e] (print e)))) (do (try (do (deactivate f) (make_obj3 (+ (. p [0]) (* -1 (/ w 2))) (+ (. p [1]) (* -1 (/ h 2))) False)) (except [e] (print e))))) (return True))))) (add-observer on_click_1)) (defn image-for [s] (do (global image-bindings) (for (b image-bindings) (if (= (. b [0]) s) (return (. b [1])))) (return False))) (defn draw-images [cosmetic] (do (defn f [keys] (do (global user-shapes) (for (s user-shapes) (if (not (image-for s)) (continue)) (if (not (= cosmetic (. s _cosmetic))) (continue)) (if (not (. s active)) (continue)) (if (. s body) (setv p (Vec2d (. s body position x) (. s body position y))) (setv p (Vec2d (. s _x) (. s _y)))) (setv angle 0) (if (. s body) (setv angle (. s body angle))) (setv angle_degrees (math.degrees angle)) (setv rotated_logo_img (pygame.transform.rotate (image-for s) (* -1 angle-degrees))) (setv offset (/ (Vec2d (rotated_logo_img.get_size)) 2)) (setv p (- p offset)) (setv screen (pygame.display.get-surface)) (screen.blit rotated_logo_img p)))) (return f))) (defn draw_pivot_lines [keys] (do (global pivots) (for (p pivots) (setv start (. p body position)) (for (j (. p shape)) (if (or (not p.active) (not j.active)) (continue)) (setv other (. j a)) (setv end (. other position)) (setv screen (pygame.display.get_surface)) (pygame.draw.line screen (Color "black") start end))))) (defn draw_connection_lines [keys] (do (global pivots) (for (c connected_shapes) (setv start (. c [0] body position)) (setv end (. c [1] body position)) (if (or (not (. c [0] active)) (not (. c [1] active))) (continue)) (setv screen (pygame.display.get_surface)) (pygame.draw.line screen (Color "black") start end)))) (defn test-ball [keys] (do (if (in constants.K_b keys) (do (do (setv obj44 (ball [(+ (int 300) (int off-x)) (+ (int 300)) (int off-y)] 10)) (setv obj44.color (Color "white")) (setv obj44.group 44) (setv obj44_image (pygame.image.load "/Users/thoughtstem/Dev/Python/py-fizzery/obj44.png")) (image-bindings.append [obj44 obj44_image]) (user_shapes.append obj44) obj44))))) (add-observer (draw-images True)) (add-observer draw_pivot_lines) (add-observer draw_connection_lines) (add-observer (draw-images False)) (run)